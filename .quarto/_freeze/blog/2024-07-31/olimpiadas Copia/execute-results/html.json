{
  "hash": "c680e1009327020bfe6382d481add371",
  "result": {
    "markdown": "---\ntitle: \"Olimpíadas e Estatísticas\"\nauthor: \"Pedro Garcia\"\ndate: 2024-07-24\ndate-format: DD/MM/YYYY\nimage: logo2.png\ncategories: [esportes, olimpíadas, gráficos, análise de dados, países, ggplot, dplyr]\ndescription: \"\"\nlanguage: _custom.yml\npage-break-after: always\nformat:\n  html:\n   theme: darkly\n   toc: true\n   toc-location: right\n   toc-depth: 3\n   code-fold: true\n   code-summary: \"Mostre o Código\"\n   css: styles.css\n\n---\n\n\n\n\n\n\n# Introdução {.justify}\n\nQuando criança, lembro-me de assistir às Olimpíadas sem entender muito bem seu real impacto. Todos aqueles esportes diferentes, cujas regras eu não conhecia direito, traziam novas descobertas. A cerimônia de abertura, então, me encantava muito; ver todas aquelas bandeiras (talvez ali tenha adquirido um fascínio imediato por bandeiras que perdura até hoje) e toda aquela diversidade cultural era realmente muito interessante!\n\nNaquela época, eu não era tão fascinado por futebol, esporte que se tornaria meu hiperfoco até os dias atuais. Mas aquele meu encantamento pelos países e suas particularidades ainda se mantém, com uma ênfase maior no contexto futebolístico.\n\nHoje, em um período olímpico, revisito esses sentimentos da infância usando estatística. Adentrarei ainda mais nas particularidades desse megaevento a partir de uma base de dados histórica do quadro de medalhas, respondendo perguntas como: quais são os países com maior desempenho por esporte? Quais países têm maior integração de mulheres? No geral, quais são as nações que dominam as competições?\n\nUm fator importante é que nossa análise será apenas das competições que aconteceram neste século, incluindo Olimpíadas de inverno e verão.\n\n\n\n# Tratamento dos Dados {.justify}\n\n### Carregando os Pacotes {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrequire(dplyr)\nrequire(tidyr) \nrequire(ggplot2) \nlibrary(dplyr) \nlibrary(countrycode) \nlibrary(ggplot2)\nrequire(DT)\n```\n:::\n\n\n\n### Carregando e Pré-Visualizando os Dados {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados = read.csv(file = 'dataset_olympics.csv',header = T) # Carrega os dados do arquivo CSV\nnoc = read.csv(file = 'noc_region.csv',header = T) # Carrega os dados do arquivo CSV\n#str(dados) # Mostra a estrutura dos dados\n# Exibe as primeiras 10 linhas dos dados como uma tabela dinâmica com estilo personalizado\ndatatable(\n  dados[sample(1:nrow(dados),100),],\n  options = list(\n    pageLength = 10, \n    autoWidth = TRUE,\n    columnDefs = list(\n      list(targets = '_all', className = 'dt-center'),  # Centraliza os dados\n      list(targets = '_all', render = JS(\n        \"function(data, type, row, meta) {\",\n        \"return '<span style=\\\"font-size:14px;\\\">' + data + '</span>';\",\n        \"}\"))\n    ),\n    scrollX = TRUE  # Adiciona barra de rolagem horizontal se necessário\n  ),\n  rownames = FALSE,\n  class = 'cell-border stripe',\n  style = \"bootstrap\",\n  callback = JS(\n    \"table.on('draw.dt', function() {\",\n    \"$('table.dataTable').css({'background-color': 'black', 'color': 'white'});\",\n    \"$('table.dataTable thead th').css({'background-color': '#333', 'color': 'white'});\",\n    \"$('table.dataTable tfoot th').css({'background-color': '#333', 'color': 'white'});\",\n    \"$('table.dataTable tbody tr').css({'background-color': 'black', 'color': 'white'});\",\n    \"$('table.dataTable tbody tr:hover').css({'background-color': '#444', 'color': 'white'});\",\n    \"});\"\n  )\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-04eddb9f34c975379976\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-04eddb9f34c975379976\">{\"x\":{\"style\":\"bootstrap\",\"filter\":\"none\",\"vertical\":false,\"data\":[[7401,28469,24696,29232,14433,34267,31167,15767,20011,33797,28268,16357,32552,10072,13535,21884,9194,33072,33844,35117,122,17565,6421,4129,29010,20621,30322,29010,22967,30382,20638,26284,12110,31991,4214,19716,12547,4490,23558,12907,10798,25911,18416,28343,1237,28066,18812,35101,13833,34538,26945,11236,31450,2658,11361,18975,23669,34511,29086,1653,17522,18571,25027,17639,18577,7331,28707,32191,35435,852,20848,6847,10977,17286,8766,24140,26554,11817,8751,7662,17315,19250,33004,7607,33152,9312,8944,20525,18774,5547,1792,645,6658,24138,25955,33362,35467,13280,10785,25843],[\"Lajos Balthazr\",\"Gerhard Dietrich\",\"Evaldo Rosa da Silva\",\"Jan Andrzej Dombrowski\",\"Maria Grazia Bozzo\",\"Marcus A. C. \\\"Marc\\\" Faulks\",\"Edward Patrick Francis \\\"Eddie\\\" Eagan\",\"Jean-Guy Brunet\",\"Sabin Chaushev\",\"Nicola Kim Fairbrother\",\"Joseph Diaz\",\"Jan Bulis\",\"Kornelia Ender (-Matthes, -Grummt)\",\"Gsta Ragnar Bengtsson (-Bewert)\",\"Zsolt Borkai\",\"Stephen Clarke\",\"Andreas Becker\",\"Martina Maria Ertl-Renz\",\"Natlia Falavigna Silva\",\"Fernand Feyaerts\",\"Nader Sufyan Abbas\",\"Doudas Leydi Camara\",\"Jzsef Babn\",\"Svend Jrgen Gerner Andresen\",\"Aleksandr Nikolayevich Dobrzhansky\",\"Darren M. Chiacchia\",\"Odette Ducas (Delcellier-)\",\"Aleksandr Nikolayevich Dobrzhansky\",\"Milan op\",\"Inga Dudchenko\",\"Giuseppe Chiantia\",\"Sonia de la Paz Galan\",\"Ren Blanchard\",\"El-Mehdi El-Ghazouani\",\"Jnis Valenti Andriksons\",\"Dhyan Chand Bais\",\"Detlef Bock\",\"Seraphino Antao\",\"Barry Alexander Cowan\",\"Claudia Bokel\",\"Livio Berruti\",\"Jan Danil Hendrik de Beaufort\",\"Danilo Caro Guarnieri\",\"Andrew Scott Dickens\",\"Antonio Aguilar Chastellain\",\"Ciro Fabio Di Corcia\",\"Richard Marshall Cashin, Jr.\",\"Friedrich Fetz\",\"Johannes Jacobus \\\"Johan\\\" Botha\",\"Adolfo Feliciano\",\"Franois Philogne Joseph Decrombecque\",\"Gregor Bialowas\",\"Miezan Edoukou\",\"Abdullah Ali\",\"Kayrat Biekenov\",\"Frank Riley Castleman\",\"Arthur Telles Cramer Ribeiro\",\"Andreas Felder\",\"Bahar Doan\",\"Shukhrat Akhmedov\",\"Luis Calvet Sandoz\",\"Javier Adolfo Carriqueo Inostroza\",\"Meir Daloya\",\"Jean-Claude Cameroun\",\"Daniel Brendon \\\"Dan\\\" Carroll\",\"Edward Pennington \\\"Ed\\\" Ballinger\",\"Ibrahima Diop\",\"Mohamed Sad El-Wardi\",\"George V. Finnegan\",\"Tadeusz Adamski\",\"Linda Rae Chisholm\",\"Bai Anqi\",\"Irina Nikolayevna Bespalova\",\"Cai Shengliu\",\"Jean Baumann\",\"Lajos Csords\",\"Flix de Poms Soler\",\"John Frederick Bissinger, Jr.\",\"Christian Baumann\",\"Anton Baraniak\",\"Lawrence J. \\\"Larry\\\" Cain\",\"Kateina echov\",\"Titus Abimbola Erinle\",\"Sheridon Baptiste\",\"Zhuldyz Attakurovna Eshimova (Turtbaeva-)\",\"Nina Bednarik\",\"Krisna Bayu\",\"Vivian Jepkemoi Cheruiyot\",\"Francisco Cascante Coba\",\"Evelyn Ashford (-Washington)\",\"Bassam Al-Ansari\",\"Elmer ngel Acevedo\",\"Ren Badell Pollar\",\"Zsfia Katalin Csonka\",\"Anne Catherine Jeanne Ghislain de Borman (de Selliers de Moranville-)\",\"Nagalingam Ethirveerasingam\",\"Andrea Paula Fioroni\",\"Georgia Bonora\",\"Timothy B. \\\"Tim\\\" Berrett\",\"De Jiaojiaonull,28,21,28,22,39,39,31,39,26,20,43,31,20,24,23,26,29,26,26,27,29,27,30,27,24,24,23,24,22,30,39,24,29,28,21,27,26,29,33,33,32,33,27,27,21,24,null,28,null,29,26,19,31,28,38,19,35,25,21,37,21,24,29,30,28,27,25,17,24,31,null,19,24,20,39,22,19,18,27,22],[null,163,184,null,null,174,179,null,168,160,174,186,172,null,175,195,190,162,178,null,173,185,170,189,null,177,173,null,175,175,null,185,183,182,null,169,194,180,190,183,180,null,175,195,179,175,193,null,181,179,null,170,172,null,null,null,183,183,155,null,null,175,156,168,null,186,173,178,null,null,188,164,168,186,169,null,184,180,163,180,182,173,null,182,152,160,184,153,null,165,175,null,175,164,null,null,170,160,180,167],[null,50,73,null,null,64,null,null,68,56,63,92,59,null,68,91,78,59,69,null,77,73,76,79,null,74,63,null,75,70,null,80,75,78,null,null,135,75,79,65,66,null,74,83,77,71,93,null,68,70,null,68,65,null,null,null,72,70,48,null,null,61,52,60,null,80,82,65,47,null,64,59,57,80,75,null,null,null,60,110,83,64,null,84,48,61,90,40,null,52,61,null,76,89,null,null,60,49,67,57],[\"Hungary\",\"East Germany\",\"Brazil\",\"Poland-2\",\"Italy\",\"Australia\",\"United States-1\",\"Canada\",\"Bulgaria\",\"Great Britain\",\"Senegal\",\"Czech Republic\",\"East Germany\",\"Kullan\",\"Hungary\",\"Canada\",\"Germany\",\"Germany\",\"Brazil\",\"Brussels Swimming and Water Polo Club\",\"Qatar\",\"Senegal\",\"Hungary\",\"Denmark\",\"Russia\",\"United States\",\"France\",\"Russia\",\"Yugoslavia\",\"Kazakhstan\",\"Italy\",\"Cuba\",\"France\",\"Morocco\",\"Latvia\",\"India\",\"Germany\",\"Kenya\",\"Great Britain\",\"Germany\",\"Italy\",\"Netherlands\",\"Colombia\",\"Canada\",\"Spain\",\"Italy\",\"United States\",\"Austria\",\"South Africa\",\"Philippines\",\"France\",\"Austria\",\"Cote d'Ivoire\",\"Egypt\",\"Kazakhstan\",\"United States\",\"Brazil\",\"Austria\",\"Turkey\",\"Uzbekistan\",\"Spain\",\"Argentina\",\"Israel\",\"Cameroon\",\"Australasia\",\"United States\",\"Senegal\",\"Morocco\",\"United States\",\"Poland\",\"United States\",\"China\",\"Russia\",\"China\",\"France\",\"Hungary\",\"Spain\",\"United States\",\"Switzerland\",\"Czechoslovakia\",\"Canada\",\"Czech Republic\",\"Nigeria\",\"Canada-2\",\"Kazakhstan\",\"Slovenia\",\"Indonesia\",\"Kenya\",\"Cuba\",\"United States\",\"United Arab Emirates\",\"El Salvador\",\"Cuba\",\"Hungary\",\"Belgium\",\"Sri Lanka\",\"Argentina\",\"Australia\",\"Canada\",\"China\"],[\"HUN\",\"GDR\",\"BRA\",\"POL\",\"ITA\",\"AUS\",\"USA\",\"CAN\",\"BUL\",\"GBR\",\"SEN\",\"CZE\",\"GDR\",\"SWE\",\"HUN\",\"CAN\",\"GER\",\"GER\",\"BRA\",\"BEL\",\"QAT\",\"SEN\",\"HUN\",\"DEN\",\"RUS\",\"USA\",\"FRA\",\"RUS\",\"YUG\",\"KAZ\",\"ITA\",\"CUB\",\"FRA\",\"MAR\",\"LAT\",\"IND\",\"GER\",\"KEN\",\"GBR\",\"GER\",\"ITA\",\"NED\",\"COL\",\"CAN\",\"ESP\",\"ITA\",\"USA\",\"AUT\",\"RSA\",\"PHI\",\"FRA\",\"AUT\",\"CIV\",\"EGY\",\"KAZ\",\"USA\",\"BRA\",\"AUT\",\"TUR\",\"UZB\",\"ESP\",\"ARG\",\"ISR\",\"CMR\",\"ANZ\",\"USA\",\"SEN\",\"MAR\",\"USA\",\"POL\",\"USA\",\"CHN\",\"RUS\",\"CHN\",\"FRA\",\"HUN\",\"ESP\",\"USA\",\"SUI\",\"TCH\",\"CAN\",\"CZE\",\"NGR\",\"CAN\",\"KAZ\",\"SLO\",\"INA\",\"KEN\",\"CUB\",\"USA\",\"UAE\",\"ESA\",\"CUB\",\"HUN\",\"BEL\",\"SRI\",\"ARG\",\"AUS\",\"CAN\",\"CHN\"],[\"1952 Summer\",\"1968 Summer\",\"1984 Summer\",\"1956 Winter\",\"1952 Summer\",\"1964 Summer\",\"1932 Winter\",\"1964 Winter\",\"1996 Summer\",\"1992 Summer\",\"1988 Summer\",\"2006 Winter\",\"1976 Summer\",\"1920 Summer\",\"1988 Summer\",\"1996 Summer\",\"1992 Summer\",\"1992 Winter\",\"2012 Summer\",\"1900 Summer\",\"2004 Summer\",\"1968 Summer\",\"1964 Winter\",\"1972 Summer\",\"1912 Summer\",\"2004 Summer\",\"1972 Summer\",\"1912 Summer\",\"1964 Summer\",\"2008 Summer\",\"1936 Summer\",\"1980 Summer\",\"1968 Winter\",\"2000 Summer\",\"1936 Winter\",\"1932 Summer\",\"2004 Summer\",\"1964 Summer\",\"2000 Summer\",\"2000 Summer\",\"1968 Summer\",\"1908 Summer\",\"1996 Summer\",\"2012 Summer\",\"1984 Summer\",\"2000 Summer\",\"1976 Summer\",\"1952 Summer\",\"1996 Summer\",\"1960 Summer\",\"1924 Summer\",\"1984 Summer\",\"1996 Summer\",\"1964 Summer\",\"1994 Winter\",\"1904 Summer\",\"1968 Summer\",\"1992 Winter\",\"2008 Summer\",\"1996 Summer\",\"1920 Summer\",\"2012 Summer\",\"1984 Summer\",\"2000 Summer\",\"1908 Summer\",\"1976 Summer\",\"1972 Summer\",\"2000 Summer\",\"1904 Summer\",\"1952 Summer\",\"1984 Summer\",\"2012 Summer\",\"2012 Summer\",\"1984 Summer\",\"1972 Summer\",\"1952 Summer\",\"1924 Summer\",\"1904 Summer\",\"2016 Summer\",\"1988 Summer\",\"1984 Summer\",\"2012 Summer\",\"1956 Summer\",\"1994 Winter\",\"2016 Summer\",\"2010 Winter\",\"2000 Summer\",\"2000 Summer\",\"1952 Summer\",\"1988 Summer\",\"1988 Summer\",\"1968 Summer\",\"1972 Summer\",\"2004 Summer\",\"1920 Summer\",\"1956 Summer\",\"1988 Summer\",\"2008 Summer\",\"1992 Summer\",\"2012 Summer\"],[1952,1968,1984,1956,1952,1964,1932,1964,1996,1992,1988,2006,1976,1920,1988,1996,1992,1992,2012,1900,2004,1968,1964,1972,1912,2004,1972,1912,1964,2008,1936,1980,1968,2000,1936,1932,2004,1964,2000,2000,1968,1908,1996,2012,1984,2000,1976,1952,1996,1960,1924,1984,1996,1964,1994,1904,1968,1992,2008,1996,1920,2012,1984,2000,1908,1976,1972,2000,1904,1952,1984,2012,2012,1984,1972,1952,1924,1904,2016,1988,1984,2012,1956,1994,2016,2010,2000,2000,1952,1988,1988,1968,1972,2004,1920,1956,1988,2008,1992,2012],[\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\"],[\"Helsinki\",\"Mexico City\",\"Los Angeles\",\"Cortina d'Ampezzo\",\"Helsinki\",\"Tokyo\",\"Lake Placid\",\"Innsbruck\",\"Atlanta\",\"Barcelona\",\"Seoul\",\"Torino\",\"Montreal\",\"Antwerpen\",\"Seoul\",\"Atlanta\",\"Barcelona\",\"Albertville\",\"London\",\"Paris\",\"Athina\",\"Mexico City\",\"Innsbruck\",\"Munich\",\"Stockholm\",\"Athina\",\"Munich\",\"Stockholm\",\"Tokyo\",\"Beijing\",\"Berlin\",\"Moskva\",\"Grenoble\",\"Sydney\",\"Garmisch-Partenkirchen\",\"Los Angeles\",\"Athina\",\"Tokyo\",\"Sydney\",\"Sydney\",\"Mexico City\",\"London\",\"Atlanta\",\"London\",\"Los Angeles\",\"Sydney\",\"Montreal\",\"Helsinki\",\"Atlanta\",\"Roma\",\"Paris\",\"Los Angeles\",\"Atlanta\",\"Tokyo\",\"Lillehammer\",\"St. Louis\",\"Mexico City\",\"Albertville\",\"Beijing\",\"Atlanta\",\"Antwerpen\",\"London\",\"Los Angeles\",\"Sydney\",\"London\",\"Montreal\",\"Munich\",\"Sydney\",\"St. Louis\",\"Helsinki\",\"Los Angeles\",\"London\",\"London\",\"Los Angeles\",\"Munich\",\"Helsinki\",\"Paris\",\"St. Louis\",\"Rio de Janeiro\",\"Seoul\",\"Los Angeles\",\"London\",\"Melbourne\",\"Lillehammer\",\"Rio de Janeiro\",\"Vancouver\",\"Sydney\",\"Sydney\",\"Helsinki\",\"Seoul\",\"Seoul\",\"Mexico City\",\"Munich\",\"Athina\",\"Antwerpen\",\"Melbourne\",\"Seoul\",\"Beijing\",\"Barcelona\",\"London\"],[\"Fencing\",\"Gymnastics\",\"Athletics\",\"Bobsleigh\",\"Gymnastics\",\"Gymnastics\",\"Bobsleigh\",\"Alpine Skiing\",\"Shooting\",\"Judo\",\"Athletics\",\"Ice Hockey\",\"Swimming\",\"Sailing\",\"Gymnastics\",\"Swimming\",\"Hockey\",\"Alpine Skiing\",\"Taekwondo\",\"Water Polo\",\"Weightlifting\",\"Basketball\",\"Ice Hockey\",\"Football\",\"Shooting\",\"Equestrianism\",\"Athletics\",\"Shooting\",\"Football\",\"Rowing\",\"Equestrianism\",\"Basketball\",\"Ice Hockey\",\"Athletics\",\"Speed Skating\",\"Hockey\",\"Athletics\",\"Athletics\",\"Tennis\",\"Fencing\",\"Athletics\",\"Fencing\",\"Shooting\",\"Swimming\",\"Water Polo\",\"Boxing\",\"Rowing\",\"Gymnastics\",\"Athletics\",\"Shooting\",\"Athletics\",\"Weightlifting\",\"Canoeing\",\"Rowing\",\"Ski Jumping\",\"Athletics\",\"Fencing\",\"Ski Jumping\",\"Athletics\",\"Shooting\",\"Shooting\",\"Athletics\",\"Weightlifting\",\"Judo\",\"Rugby\",\"Fencing\",\"Wrestling\",\"Athletics\",\"Boxing\",\"Hockey\",\"Volleyball\",\"Swimming\",\"Swimming\",\"Water Polo\",\"Shooting\",\"Football\",\"Fencing\",\"Gymnastics\",\"Gymnastics\",\"Weightlifting\",\"Canoeing\",\"Athletics\",\"Athletics\",\"Bobsleigh\",\"Wrestling\",\"Freestyle Skiing\",\"Judo\",\"Athletics\",\"Gymnastics\",\"Athletics\",\"Swimming\",\"Football\",\"Gymnastics\",\"Shooting\",\"Tennis\",\"Athletics\",\"Hockey\",\"Gymnastics\",\"Athletics\",\"Hockey\"],[\"Fencing Men's epee, Team\",\"Gymnastics Men's Parallel Bars\",\"Athletics Men's 400 metres\",\"Bobsleigh Men's Four\",\"Gymnastics Women's Team Portable Apparatus\",\"Gymnastics Men's Pommelled Horse\",\"Bobsleigh Men's Four\",\"Alpine Skiing Men's Slalom\",\"Shooting Men's Rapid-Fire Pistol, 25 metres\",\"Judo Women's Lightweight\",\"Athletics Men's 4 x 100 metres Relay\",\"Ice Hockey Men's Ice Hockey\",\"Swimming Women's 100 metres Butterfly\",\"Sailing Mixed 30 metres\",\"Gymnastics Men's Individual All-Around\",\"Swimming Men's 100 metres Butterfly\",\"Hockey Men's Hockey\",\"Alpine Skiing Women's Slalom\",\"Taekwondo Women's Heavyweight\",\"Water Polo Men's Water Polo\",\"Weightlifting Men's Middleweight\",\"Basketball Men's Basketball\",\"Ice Hockey Men's Ice Hockey\",\"Football Men's Football\",\"Shooting Men's Free Rifle, Three Positions, 300 metres\",\"Equestrianism Mixed Three-Day Event, Team\",\"Athletics Women's Long Jump\",\"Shooting Men's Small-Bore Rifle, Any Position, 50 metres\",\"Football Men's Football\",\"Rowing Women's Single Sculls\",\"Equestrianism Men's Three-Day Event, Team\",\"Basketball Women's Basketball\",\"Ice Hockey Men's Ice Hockey\",\"Athletics Men's Long Jump\",\"Speed Skating Men's 5,000 metres\",\"Hockey Men's Hockey\",\"Athletics Men's Shot Put\",\"Athletics Men's 100 metres\",\"Tennis Men's Doubles\",\"Fencing Women's epee, Team\",\"Athletics Men's 200 metres\",\"Fencing Men's Sabre, Individual\",\"Shooting Men's Trap\",\"Swimming Men's 100 metres Breaststroke\",\"Water Polo Men's Water Polo\",\"Boxing Men's Light-Middleweight\",\"Rowing Men's Coxed Eights\",\"Gymnastics Men's Pommelled Horse\",\"Athletics Men's 800 metres\",\"Shooting Men's Small-Bore Rifle, Three Positions, 50 metres\",\"Athletics Men's 10 kilometres Walk\",\"Weightlifting Men's Lightweight\",\"Canoeing Men's Kayak Singles, 1,000 metres\",\"Rowing Men's Coxed Fours\",\"Ski Jumping Men's Normal Hill, Individual\",\"Athletics Men's 100 metres\",\"Fencing Men's epee, Individual\",\"Ski Jumping Men's Normal Hill, Individual\",\"Athletics Women's Marathon\",\"Shooting Men's Free Pistol, 50 metres\",\"Shooting Men's Free Pistol, 50 metres, Team\",\"Athletics Men's 5,000 metres\",\"Weightlifting Men's Flyweight\",\"Judo Men's Half-Lightweight\",\"Rugby Men's Rugby\",\"Fencing Men's Foil, Team\",\"Wrestling Men's Middleweight, Freestyle\",\"Athletics Men's 5,000 metres\",\"Boxing Men's Bantamweight\",\"Hockey Men's Hockey\",\"Volleyball Women's Volleyball\",\"Swimming Women's 200 metres Backstroke\",\"Swimming Women's 4 x 100 metres Medley Relay\",\"Water Polo Men's Water Polo\",\"Shooting Mixed Rapid-Fire Pistol, 25 metres\",\"Football Men's Football\",\"Fencing Men's epee, Team\",\"Gymnastics Men's Individual All-Around, Field Sports\",\"Gymnastics Men's Rings\",\"Weightlifting Men's Heavyweight II\",\"Canoeing Men's Canadian Singles, 1,000 metres\",\"Athletics Women's 100 metres\",\"Athletics Men's 4 x 100 metres Relay\",\"Bobsleigh Men's Four\",\"Wrestling Women's Flyweight, Freestyle\",\"Freestyle Skiing Women's Moguls\",\"Judo Men's Middleweight\",\"Athletics Women's 5,000 metres\",\"Gymnastics Men's Rings\",\"Athletics Women's 4 x 100 metres Relay\",\"Swimming Men's 400 metres Freestyle\",\"Football Men's Football\",\"Gymnastics Men's Floor Exercise\",\"Shooting Women's Air Pistol, 10 metres\",\"Tennis Women's Singles\",\"Athletics Men's High Jump\",\"Hockey Women's Hockey\",\"Gymnastics Women's Balance Beam\",\"Athletics Men's 20 kilometres Walk\",\"Hockey Women's Hockey\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"Silver\",\"\",\"Bronze\",\"Gold\",\"Gold\",\"\",\"\",\"Gold\",\"\",\"\",\"Silver\",\"\",\"\",\"\",\"\",\"\",\"Bronze\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"\",\"Silver\",\"\",\"Silver\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"\",\"\",\"Silver\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]],\"container\":\"<table class=\\\"table table-bordered table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>ID<\\/th>\\n      <th>Name<\\/th>\\n      <th>Sex<\\/th>\\n      <th>Age<\\/th>\\n      <th>Height<\\/th>\\n      <th>Weight<\\/th>\\n      <th>Team<\\/th>\\n      <th>NOC<\\/th>\\n      <th>Games<\\/th>\\n      <th>Year<\\/th>\\n      <th>Season<\\/th>\\n      <th>City<\\/th>\\n      <th>Sport<\\/th>\\n      <th>Event<\\/th>\\n      <th>Medal<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"autoWidth\":true,\"columnDefs\":[{\"targets\":\"_all\",\"className\":\"dt-center\"},{\"targets\":\"_all\",\"render\":\"function(data, type, row, meta) {\\nreturn '<span style=\\\"font-size:14px;\\\">' + data + '<\\/span>';\\n}\"}],\"scrollX\":true,\"order\":[],\"orderClasses\":false},\"callback\":\"function(table) {\\ntable.on('draw.dt', function() {\\n$('table.dataTable').css({'background-color': 'black', 'color': 'white'});\\n$('table.dataTable thead th').css({'background-color': '#333', 'color': 'white'});\\n$('table.dataTable tfoot th').css({'background-color': '#333', 'color': 'white'});\\n$('table.dataTable tbody tr').css({'background-color': 'black', 'color': 'white'});\\n$('table.dataTable tbody tr:hover').css({'background-color': '#444', 'color': 'white'});\\n});\\n}\"},\"evals\":[\"options.columnDefs.1.render\",\"callback\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n### Transformando os Dados {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados$Medal = ifelse(dados$Medal == '','Null',dados$Medal) # Substitui valores vazios em Medal por 'Null'\n\ndados$aux = 1 # Cria uma coluna auxiliar com valor 1\n\ndados = dados |> \n  pivot_wider(names_from = c(Medal),values_from = aux,values_fn = sum,values_fill = 0) |> # Transforma os dados em formato wide\n  as.data.frame() # Converte para data frame\n```\n:::\n\n\n\n### Visualizando os esportes {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#unique(dados$Sport) # Mostra os valores únicos da coluna Sport\nwc = as.data.frame(table(unique(dados$Sport)))\nwordcloud2::wordcloud2(data = wc,size = 0.15,\n  color = 'random-light',\n  backgroundColor = 'black')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"wordcloud2 html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-502bc2fbad1089f20c17\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-502bc2fbad1089f20c17\">{\"x\":{\"word\":[\"Alpine Skiing\",\"Alpinism\",\"Archery\",\"Art Competitions\",\"Athletics\",\"Badminton\",\"Baseball\",\"Basketball\",\"Basque Pelota\",\"Beach Volleyball\",\"Biathlon\",\"Bobsleigh\",\"Boxing\",\"Canoeing\",\"Cricket\",\"Croquet\",\"Cross Country Skiing\",\"Curling\",\"Cycling\",\"Diving\",\"Equestrianism\",\"Fencing\",\"Figure Skating\",\"Football\",\"Freestyle Skiing\",\"Golf\",\"Gymnastics\",\"Handball\",\"Hockey\",\"Ice Hockey\",\"Jeu De Paume\",\"Judo\",\"Lacrosse\",\"Luge\",\"Military Ski Patrol\",\"Modern Pentathlon\",\"Motorboating\",\"Nordic Combined\",\"Polo\",\"Racquets\",\"Rhythmic Gymnastics\",\"Roque\",\"Rowing\",\"Rugby\",\"Rugby Sevens\",\"Sailing\",\"Shooting\",\"Short Track Speed Skating\",\"Skeleton\",\"Ski Jumping\",\"Snowboarding\",\"Softball\",\"Speed Skating\",\"Swimming\",\"Synchronized Swimming\",\"Table Tennis\",\"Taekwondo\",\"Tennis\",\"Trampolining\",\"Triathlon\",\"Tug-Of-War\",\"Volleyball\",\"Water Polo\",\"Weightlifting\",\"Wrestling\"],\"freq\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"fontFamily\":\"Segoe UI\",\"fontWeight\":\"bold\",\"color\":\"random-light\",\"minSize\":0,\"weightFactor\":27,\"backgroundColor\":\"black\",\"gridSize\":0,\"minRotation\":-0.7853981633974483,\"maxRotation\":0.7853981633974483,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}}</script>\n```\n:::\n:::\n\n\n### Criação de Variáveis {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsel1 = dados |> \n  filter(Year >= 2000) |> # Filtra os dados para o ano 2000 ou posterior\n  group_by(NOC) |> # Agrupa por NOC\n  summarise(\n    ger_mdl_ouro = sum(Gold), # Soma as medalhas de ouro\n    ger_mdl_prata = sum(Silver), # Soma as medalhas de prata\n    ger_mdl_bronze = sum(Bronze), # Soma as medalhas de bronze\n    ger_mdl_ausente = sum(Null), # Soma as medalhas ausentes\n    ger_mdl_tot = ger_mdl_ouro + ger_mdl_prata + ger_mdl_bronze, # Calcula o total de medalhas\n    ger_mdl_score = (ger_mdl_ouro * 0.5) + (ger_mdl_prata * 0.2) + (ger_mdl_bronze * 0.1), # Calcula o score de medalhas\n    ger_mdl_aproveitamento = (ger_mdl_tot) / ((ger_mdl_tot) + (ger_mdl_ausente)), # Calcula o aproveitamento de medalhas\n    ger_esportes_diferentes = n_distinct(Sport), # Conta esportes diferentes\n    ger_modalidades_diferentes =  n_distinct(Event), # Conta modalidades diferentes\n    ger_mediana_idade = median(Age,na.rm = T), # Calcula a mediana da idade\n    ger_qtd_atletas_m = sum(ifelse(Sex == 'M',1,0),na.rm = T), # Conta atletas do sexo masculino\n    ger_qtd_atletas_f = sum(ifelse(Sex == 'F',1,0),na.rm = T), # Conta atletas do sexo feminino\n    ger_prop_f = ger_qtd_atletas_f/(ger_qtd_atletas_m+ger_qtd_atletas_f) # Calcula a proporção de atletas femininas\n  ) |> \n  ungroup() |> # Desagrupa os dados\n  mutate(across(where(is.numeric), ~ rank(-.x), .names = \"rank_{col}\")) |> # Aplica ranking às colunas numéricas\n  as.data.frame() |> # Converte para data frame\n  arrange(-ger_mdl_score) # Ordena pelo score de medalhas\n\n\n\n\nsel2 = dados |> \n  filter(Year >= 2000) |> # Filtra os dados para o ano 2000 ou posterior\n  group_by(NOC,Sport) |> # Agrupa por NOC e Sport\n  summarise(\n    mdl_ouro = sum(Gold), # Soma as medalhas de ouro\n    mdl_prata = sum(Silver), # Soma as medalhas de prata\n    mdl_bronze = sum(Bronze), # Soma as medalhas de bronze\n    mdl_ausente = sum(Null), # Soma as medalhas ausentes\n    mdl_tot = mdl_ouro+mdl_prata+mdl_bronze, # Calcula o total de medalhas\n    mdl_score = (mdl_ouro*0.5)+(mdl_prata*0.2)+(mdl_bronze*0.1), # Calcula o score de medalhas\n    esportes_diferentes = n_distinct(Sport), # Conta esportes diferentes\n    modalidades_diferentes =  n_distinct(Event), # Conta modalidades diferentes\n    mediana_idade = median(Age,na.rm = T), # Calcula a mediana da idade\n    qtd_atletas_m = sum(ifelse(Sex == 'M',1,0),na.rm = T), # Conta atletas do sexo masculino\n    qtd_atletas_f = sum(ifelse(Sex == 'F',1,0),na.rm = T), # Conta atletas do sexo feminino\n    prop_f = qtd_atletas_f/(qtd_atletas_m+qtd_atletas_f) # Calcula a proporção de atletas femininas\n  ) |> \n  group_by(Sport) |> # Agrupa por Sport\n  mutate(across(where(is.numeric), ~ rank(-.x), .names = \"rank_{col}\")) |> # Aplica ranking às colunas numéricas\n  as.data.frame() |> # Converte para data frame\n  arrange(-mdl_score) |> # Ordena pelo score de medalhas\n  ungroup() # Desagrupa os dados\n\n\n\n\nsel = merge(sel2,sel1,all.x = T,by = c('NOC')) # Faz o merge dos dados por NOC\nsel = merge(sel,noc,by.x = 'NOC',by.y = 'noc_region',all.x = T) # Faz o merge com a base de dados NOC\nsel$prop_mdl_p_esporte = sel$mdl_tot/sel$ger_mdl_tot # Calcula a proporção de medalhas por esporte\n\n\nsel_ano = dados |> \n  filter(Year >= 2000) |> # Filtra os dados para o ano 2000 ou posterior\n  group_by(NOC,Year) |> # Agrupa por NOC e Year\n  summarise(\n    ger_mdl_ouro = sum(Gold), # Soma as medalhas de ouro\n    ger_mdl_prata = sum(Silver), # Soma as medalhas de prata\n    ger_mdl_bronze = sum(Bronze), # Soma as medalhas de bronze\n    ger_mdl_ausente = sum(Null), # Soma as medalhas ausentes\n    ger_mdl_tot = ger_mdl_ouro + ger_mdl_prata + ger_mdl_bronze, # Calcula o total de medalhas\n    ger_mdl_score = (ger_mdl_ouro * 0.5) + (ger_mdl_prata * 0.2) + (ger_mdl_bronze * 0.1), # Calcula o score de medalhas\n    ger_mdl_aproveitamento = (ger_mdl_tot) / ((ger_mdl_tot) + (ger_mdl_ausente)), # Calcula o aproveitamento de medalhas\n    ger_esportes_diferentes = n_distinct(Sport), # Conta esportes diferentes\n    ger_modalidades_diferentes =  n_distinct(Event), # Conta modalidades diferentes\n    ger_mediana_idade = median(Age,na.rm = T), # Calcula a mediana da idade\n    ger_qtd_atletas_m = sum(ifelse(Sex == 'M',1,0),na.rm = T), # Conta atletas do sexo masculino\n    ger_qtd_atletas_f = sum(ifelse(Sex == 'F',1,0),na.rm = T), # Conta atletas do sexo feminino\n    ger_prop_f = ger_qtd_atletas_f/(ger_qtd_atletas_m+ger_qtd_atletas_f) # Calcula a proporção de atletas femininas\n  ) |> \n  ungroup() |> # Desagrupa os dados\n  mutate(across(where(is.numeric), ~ rank(-.x), .names = \"rank_{col}\")) |> # Aplica ranking às colunas numéricas\n  as.data.frame() |> # Converte para data frame\n  arrange(-ger_mdl_score) # Ordena pelo score de medalhas\n```\n:::\n\n\n# Visualização de Dados {.justify}\n\n### Quais os países que mais dominam as olímpiadas no quadro de medalhas? {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual = sel |> \n  filter(rank_ger_mdl_tot <= 20) |> # Filtra os top 20 no ranking geral de medalhas\n  arrange(rank_ger_mdl_tot) |> # Ordena pelo ranking geral de medalhas\n  select(NOC,rank_ger_mdl_tot,reg,ger_mdl_tot,ger_esportes_diferentes,ger_mdl_score,reg) |> # Seleciona as colunas relevantes\n  distinct() # Remove duplicatas\n\nggplot(visual, aes(x = reorder(reg, ger_mdl_tot), y = ger_mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"gold\",'#C0C0C0', \"#CD7F32\"))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = round(ger_mdl_tot)), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nÉ interessante que nosso imaginário nos indique que os EUA seriam o país mais vitorioso, e isso se comprova no gráfico, onde há uma grande superioridade, possuindo mais que o dobro de medalhas da segunda colocada, Rússia. Em seguida, vêm países tradicionais como Austrália, Alemanha, França, Itália e Reino Unido, com predomínio da Europa. No gráfico, os países fora desse continente que também figuram no topo são Canadá, Brasil, China, Argentina, Cuba e Jamaica.\n\nÉ importante ressaltar que atletas da Rússia poderão participar das Olimpíadas de 2024 em Paris, mas sob condições rigorosas. Eles competirão como 'atletas neutros individuais', sem representar oficialmente a Rússia, ou seja, não poderão usar a bandeira, o hino ou as cores nacionais. Essa decisão foi tomada pelo Comitê Olímpico Internacional (COI) após a invasão da Ucrânia pela Rússia. Apenas um número muito limitado de atletas que não apoiem ativamente a guerra e que não estejam contratualmente vinculados ao exército russo ou bielorrusso será elegível para competir.\n\nNesse visual, abordamos quais países em valores absolutos possuem maior domínio olímpico. Mas será que isso se repete quando pensamos em termos de aproveitamento de medalhas, considerando a proporção de medalhas ganhas pelo total de atletas que participaram das modalidades? Em seguida, temos um visual que mostra os países com maior aproveitamento. Um detalhe é que, para essa análise, separamos apenas os países que participaram de pelo menos 10 esportes distintos, atribuindo uma faixa de corte visando a diversidade esportiva.\n\n### Quais os países têm maior aproveitamento de medalhas? {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual  = sel |> \n  filter(ger_esportes_diferentes >= 10) |> # Filtra para esportes diferentes >= 10\n  arrange(rank_ger_mdl_aproveitamento) |> # Ordena pelo ranking de aproveitamento de medalhas\n  select(reg,ger_mdl_tot,ger_mdl_aproveitamento,ger_esportes_diferentes) |> # Seleciona as colunas relevantes\n  distinct() |> # Remove duplicatas\n  head(20) # Seleciona os top 15\n\n\nggplot(visual, aes(x = reorder(reg, ger_mdl_aproveitamento), y = ger_mdl_aproveitamento)) + # Cria gráfico de barras ordenado pelo aproveitamento de medalhas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"gold4\", \"gold1\"))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = paste0(round(ger_mdl_aproveitamento*100),'%')), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\",color = 'white') + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"), # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nComo podemos perceber, a seleção americana segue no topo, também nesse critério, com um aproveitamento de 32% das medalhas disputadas. Porém, note que a diferença para os demais colocados é menor que no total de medalhas, mostrando um maior equilíbrio no topo. Um destaque interessante é a segunda colocada, Sérvia, que não aparece no visual anterior, mas tem um alto aproveitamento na disputa das medalhas. Outros países em seguida que 'não entram para perder' são a Holanda, China, Rússia, Noruega, Dinamarca, Austrália, Cuba e Alemanha, completando o top 10.\n\nE se olharmos agora por uma ótica onde criaremos um score, dando 50%, 30% e 10% de peso sobre o total de medalhas de ouro, prata e bronze, respectivamente, com o objetivo de verificar se alguns países sobem no ranking geral pela qualidade das medalhas conquistadas?\n\n### Nações com maiores scores de medalhas {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvisual <- sel |> \n  arrange(-ger_mdl_score) |> # Ordena pelo score de medalhas\n  select(NOC, reg, ger_mdl_score, ger_mdl_aproveitamento, ger_mdl_tot) |> # Seleciona as colunas relevantes\n  distinct() |> # Remove duplicatas\n  head(20) |> # Seleciona os top 20\n  mutate(\n    iso2 = tolower(countrycode(reg, \"country.name\", \"iso2c\")), # Converte nomes de países para códigos ISO2\n    color = case_when(\n      row_number() == 1 ~ \"gold\", # Cor para o 1º lugar\n      row_number() == 2 ~ \"#C0C0C0\", # Cor para o 2º lugar\n      row_number() == 3 ~ \"#CD7F32\", # Cor para o 3º lugar\n      TRUE ~ \"#E0E0E0\" # Cor para os demais\n    )\n  )\n\nggplot(visual, aes(x = reorder(reg, ger_mdl_score), y = ger_mdl_score)) + # Cria gráfico de barras ordenado pelo score de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define as cores das barras\n  geom_text(aes(label = round(ger_mdl_score)), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity() # Aplica as cores definidas manualmente\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nEm comparação com o primeiro visual, vemos que as nações que obtiveram um maior salto a partir da qualidade das medalhas no ranking foram a China e o Reino Unido. Em relação aos três primeiros colocados, nada mudou.\n\nExpandindo um pouco nosso olhar além do contexto geral, podemos nos perguntar quais nações mais dominam cada esporte. Uma pergunta que podemos levantar é sobre os países que têm mais tradição em um só esporte. Costumamos dizer que o Brasil é o país do futebol, mas e nas Olimpíadas, quais países são mais tradicionais dentro dos esportes que disputam?\n\n### Países com Maior Tradição em um Esporte {.justify}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual  = sel |> \n  arrange(-prop_mdl_p_esporte) |> # Ordena pela proporção de medalhas por esporte\n  select(Sport,reg,prop_mdl_p_esporte,mdl_tot) |> # Seleciona as colunas relevantes\n  filter(mdl_tot >= 5) |> # Filtra para total de medalhas >= 5\n  head(20) # Seleciona os top 20\n\n\nunique(visual$Sport) # Mostra os valores únicos da coluna Sport\n\ncores_esporte <- c(\n  \"Athletics\" = \"#FF4500\",  # Cor para Athletics\n  \"Football\" = \"#008000\",   # Cor para Football\n  \"Swimming\" = \"#1E90FF\",   # Cor para Swimming\n  \"Ice Hockey\" = \"#4682B4\", # Cor para Ice Hockey\n  \"Hockey\" = \"#FFD700\",     # Cor para Hockey\n  \"Rowing\" = \"#8B4513\",     # Cor para Rowing\n  \"Alpine Skiing\" = \"#A52A2A\", # Cor para Alpine Skiing\n  \"Water Polo\" = \"#00CED1\",  # Cor para Water Polo\n  \"Wrestling\" = \"#DC143C\"    # Cor para Wrestling\n)\n\nggplot(visual, aes(x = reorder(reg, prop_mdl_p_esporte), y = prop_mdl_p_esporte, fill = Sport)) + # Cria gráfico de barras ordenado pela proporção de medalhas por esporte\n  geom_bar(stat = \"identity\") + # Define o tipo de gráfico\n  geom_text(aes(label = paste0(round(prop_mdl_p_esporte * 100), '%')), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\",color = 'white') + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  scale_fill_manual(values = cores_esporte) +  # Configura as cores manualmente\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nÉ relevante destacar que, para esse visual, consideramos apenas os países que têm no mínimo 5 medalhas conquistadas no esporte. Podemos visualizar que alguns países têm 100% das medalhas conquistadas neste século em apenas um esporte, como Marrocos, Quênia, Jamaica, Etiópia e Bahamas no Atletismo; Paraguai e Camarões no Futebol (como são esportes coletivos de no mínimo 11 jogadores titulares, a quantidade de medalhas conquistadas favorece esses países); e, por fim, Zimbábue na Natação. Assim, podemos dizer que são países 'especialistas' nesses esportes.\n\nDito isso, e se agora quisermos ver quais países de fato têm mais medalhas por esporte? É o que mostramos a seguir.\n\n### Países com mais medalhas por esporte {.justify}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvisual = sel |>\n  filter(reg != 'NA') |>\n  filter(rank_mdl_tot <= 3) |> # Filtra os top 3 no ranking de total de medalhas\n  arrange(Sport,rank_mdl_tot) |> # Ordena por Sport e ranking de total de medalhas\n  select(NOC,Sport,rank_mdl_tot,reg,mdl_tot) |> # Seleciona as colunas relevantes\n  mutate(\n    color = case_when(\n      rank_mdl_tot <= 1.5 ~ \"gold\", # Cor para o 1º lugar\n      rank_mdl_tot <= 2.5 ~ \"#C0C0C0\", # Cor para o 2º lugar\n      rank_mdl_tot <= 3.5 ~ \"#CD7F32\", # Cor para o 3º lugar\n      TRUE ~ \"#E0E0E0\" # Cor para os demais\n    )\n  )\n\n\n#length(unique(visual$Sport)) # Conta os valores únicos da coluna Sport\n\n\nvisual$reg <- tidytext::reorder_within(visual$reg, visual$mdl_tot, visual$Sport) # Reordena dentro de cada esporte\n\nsports = visual |> group_by(Sport) |> summarise(s = sum(mdl_tot)) |> arrange(-s) |> select(Sport) |> pull()\n\nvisual1 = visual[visual$Sport %in% sports[1:9],] # Filtra os primeiros 18 esportes\nvisual2 = visual[visual$Sport %in% sports[10:18],] # Filtra os próximos 18 esportes\nvisual3 = visual[visual$Sport %in% sports[19:27],] # Filtra os últimos esportes\nvisual4 = visual[visual$Sport %in% sports[28:36],] # Filtra os últimos esportes\nvisual5 = visual[visual$Sport %in% sports[37:45],] # Filtra os últimos esportes\nvisual6 = visual[visual$Sport %in% sports[46:54],] # Filtra os últimos esportes\n\n\nlibrary(tidytext) # Carrega o pacote tidytext\n\nggplot(visual1, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual2, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual3, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual4, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual5, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\nNo primeiro gráfico, dentro do bloco de esportes com mais volume de medalhas distribuídas, temos a seleção americana liderando 4 dos 9 esportes destacados: Atletismo, Basquete, Hóquei no Gelo e Natação. Outro destaque é a Austrália, que fica com a simbólica medalha de prata em 4 esportes. Além da Etiópia, que figurou no ranking das seleções com mais tradição em um só esporte, resultando no pódio geral no Atletismo.\n\nNos demais visuais, conseguimos ver nossa seleção liderando o Vôlei de Praia e o Vôlei de Quadra. Alguns países que me surpreenderam, por não estarem nos rankings gerais de medalhas e também por não conhecer todas as culturas e esportes, foram:\n\n- Taiwan e México liderando no Taekwondo\n- Suíça à frente no Trenó (bobsleigh)\n- Áustria dominando no Esqui Alpino\n- Coreia do Sul em primeiro na Patinação de Velocidade em Pista Curta\n\nA maioria dessas 'surpresas' realmente tem viés de não conhecimento cultural e/ou dos esportes.\n\n\n### Quais os países com maior integração das mulheres no esporte? (considerando as nações que possuem mais de 20 atletas) {.justify}\n\n::: {.cell}\n\n```{.r .cell-code}\n#| fig-align: center\n#| echo: true\n#| warning: false\n#| message: false\n\n{\nvisual = sel |> \n  arrange(-ger_prop_f) |> # Ordena pela proporção de atletas femininas\n  select(NOC,reg,ger_mdl_tot,ger_qtd_atletas_f,ger_prop_f,ger_qtd_atletas_m) |> # Seleciona as colunas relevantes\n  filter(ger_qtd_atletas_f+ger_qtd_atletas_m >= 20) |> # Filtra para total de atletas >= 20\n  distinct() |> # Remove duplicatas\n  head(25) # Seleciona os top 20\n\nsel |> \n  arrange(-ger_prop_f) |> # Ordena pela proporção de atletas femininas\n  select(NOC,reg,ger_mdl_tot,ger_qtd_atletas_f,ger_prop_f,ger_qtd_atletas_m) |> # Seleciona as colunas relevantes\n  filter(ger_qtd_atletas_f+ger_qtd_atletas_m >= 20) |> # Filtra para total de atletas >= 20\n  distinct() |> # Remove duplicatas\n  head(25) # Seleciona os top 20\n\n#visual[,c('ger_prop_f','NOC','reg')]\n\nggplot(visual, aes(x = reorder(paste0(reg,' | ',NOC), ger_prop_f), y = ger_prop_f)) + # Cria gráfico de barras ordenado pela proporção de atletas femininas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"deeppink\", \"pink\", \"lightpink\" ))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = paste0(round(ger_prop_f*100,1),'%')), vjust = 0.5, hjust = 1.25, size = 3.5, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\nPodemos ver que as nações que possuem mais representantes femininas neste século, de maneira bem predominante, são Coreia do Norte, Zimbábue, Angola, Bahamas e Panamá, com mais de 60% de representação. As nações líderes na participação feminina vêm do continente asiático e africano. Tomando como base uma proporção entre 45% e 55%, podemos classificar como um intervalo de equilíbrio entre os sexos. Assim, temos logo em sequência países que conseguem ter ambos os sexos sendo representados de forma semelhante.  Um destaque curioso vai para Israel, que possui essa representatividade exatamente igual. A pergunta que fica é: qual é o fundo do iceberg desse visual?\n\n### Países com menor participação de mulheres {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual = sel |> \n  arrange(ger_prop_f) |> # Ordena pela proporção de atletas femininas\n  select(NOC,reg,ger_mdl_tot,ger_qtd_atletas_f,ger_prop_f,ger_qtd_atletas_m) |> # Seleciona as colunas relevantes\n  filter(ger_qtd_atletas_f+ger_qtd_atletas_m >= 20) |> # Filtra para total de atletas >= 20\n  distinct() |> # Remove duplicatas\n  head(25) # Seleciona os top 20\n\nggplot(visual, aes(x = reorder(paste0(reg,' | ',NOC), -ger_prop_f), y = ger_prop_f)) + # Cria gráfico de barras ordenado pela proporção de atletas femininas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"lightpink\", \"pink\", \"deeppink\" ))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = paste0(round(ger_prop_f*100,1),'%')), vjust = 0.5, hjust = 1.25, size = 3.5, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=672}\n:::\n:::\n\nPor outro lado, temos muitos países que possuem enorme desigualdade, onde o top 25 com mais 'igualdade' possui 25% de mulheres representantes. No fundo do iceberg, liderando essa estatística, estão Paquistão, Arábia Saudita, Kuwait e Bósnia, com menos de 10% de representatividade.\n\n# Referências {.justify}\n\n- [Base de Dados | Olympic Data](https://www.kaggle.com/datasets/bhanupratapbiswas/olympic-data)\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "olimpiadas-Copia_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.28/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-bootstrap-1.13.4/css/dataTables.bootstrap.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-bootstrap-1.13.4/css/dataTables.bootstrap.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-bootstrap-1.13.4/js/jquery.dataTables.min.js\"></script>\r\n<script src=\"../../site_libs/dt-core-bootstrap-1.13.4/js/dataTables.bootstrap.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/wordcloud2-0.0.1/wordcloud.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/wordcloud2-0.0.1/wordcloud2-all.js\"></script>\r\n<script src=\"../../site_libs/wordcloud2-0.0.1/hover.js\"></script>\r\n<script src=\"../../site_libs/wordcloud2-binding-0.2.1/wordcloud2.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}