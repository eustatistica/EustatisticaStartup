{
  "hash": "96fafb78a38c5a9c05dd42b9f684a672",
  "result": {
    "markdown": "---\ntitle: 'Elevar sua Experiência Musical com Dados'\nauthor: \"Pedro Garcia\"\ndate: 2025-02-02\ndate-format: DD/MM/YYYY\nimage: logo.jpeg\ncategories: [Recomendação,Sistemas de Recomendação,Experiências,Músicas]\ndescription: \"\"\nlanguage: _custom.yml\npage-break-after: always\nformat:\n  html:\n   theme: darkly\n   toc: true\n   toc-location: right\n   toc-depth: 3\n   code-fold: true\n   code-summary: \"Mostre o Código\"\n   css: styles.css\n\n---\n\n\n<!--\n-->\n\n\n# O Poder da Estatística recomendando boas Experiências Musicais {.justify}\n\n## Um Resumo da Ópera {.justify}\n\n\n\nRecentemente, fizemos um post bem explicativo sobre o poder da estatística de nos recomendar boas experiências. A premissa é a seguinte: e se você pudesse contar com a ajuda de centenas de amigos que têm gostos musicais semelhantes aos seus e, assim, receber deles indicações das músicas que provavelmente você gostaria de ouvir?\n\nImagine poder reviver aquela sensação incrível de escutar uma música tão boa que você quer repetir várias vezes. Além disso, imagine a emoção de descobrir uma excelente música pela primeira vez! Se quiser se aprofundar nesse tema, recomendo fortemente que veja este [post](blog/2025-01-27/recomende.qmd). Lá, você encontrará exemplos de como criar um modelo de recomendação usando estatística, além de aplicações práticas em diversas áreas, inclusive no seu negócio!\n\nNeste post, vamos nos concentrar em mostrar um produto final: um sistema de recomendação criado a partir das músicas mais escutadas no Spotify. Falaremos sobre como obtivemos a base de dados, a metodologia usada para criar o modelo de recomendação, bem como a criação de características para comparar as músicas e, finalmente, mostrar as mais semelhantes entre si.\n\nSe você estiver muito ansioso para ver o produto final, permitimos que você \"fure a fila\" e vá direto para o final do post, onde poderá buscar novas músicas com base nas suas preferidas. Mas, acredite, vale a pena dar uma olhada no conteúdo antes, tá?\n\n\n\n![Imagem Criada com IA - Meta AI Llama 3.2](IMG1.jpeg){fig-align=\"center\" width=\"400\"}\n## Como Criar Um Sistema de Recomendação? {.justify}\n\n### Dados {.justify}\n\n\n\nPara criar um sistema de recomendação, precisamos da matéria-prima mais importante da atualidade: dados! No nosso caso, usamos uma [base de dados](https://www.kaggle.com/datasets/asaniczka/top-spotify-songs-in-73-countries-daily-updated) extraída do Kaggle, que contém as 100 músicas mais escutadas diariamente em 74 países diferentes.\n\nEssa base de dados traz informações bem interessantes, que ajudam a definir as características das músicas. É com esses dados que calculamos a semelhança entre as músicas e, no final, conseguimos recomendar as mais parecidas com aquela que você já gosta. Assim, você pode descobrir novas músicas e ter experiências incríveis!\n\nNovamente, se quiser se aprofundar nos detalhes dos cálculos e códigos para criar um sistema como esse, ou até mesmo aplicar essa ideia em alguma área da sua vida, acesse o [post](blog/2025-01-27/recomende.qmd). Lá, explicamos tudo direitinho!\n\n### Variáveis {.justify}\n\nDentre as variáveis que utilizamos para calcular a semelhança entre as músicas, estão:\n\n- Speechiness: que mede o quanto uma música é falada.\n- Energy: que avalia a intensidade e a atividade da música, como batidas rápidas e sons enérgicos.\n- Danceability: que representa a facilidade de dançar uma música, considerando fatores como ritmo e regularidade do compasso.\n- Valence: que expressa o quão positiva ou negativa é a música emocionalmente.\n- Acousticness: que indica o quanto uma música é acústica, em contraste com sons eletrônicos.\n- Instrumentalness: que define o grau em que uma faixa é instrumental ou contém vocais.\n\nEsses parâmetros ajudam a comparar e classificar músicas de forma mais precisa, levando em consideração características sonoras que afetam diretamente a experiência auditiva.\n\n![Imagem Criada com IA - Meta AI Llama 3.2](IMG2.jpeg){fig-align=\"center\" width=\"400\"}\n\nAlém dessas variáveis, que já vieram prontas nos dados, criamos outras que podem ser interessantes para comparar as músicas. Uma delas foi um score de sentimento da música. Mas, como assim? Tem como calcular isso? Sim! De maneira simples, aplicamos técnicas de NLP (Processamento de Linguagem Natural) nos títulos das músicas para extrair os tipos de sentimentos associados a cada palavra. Isso só é possível graças ao NRC Emotion Lexicon, um léxico que associa palavras a emoções e sentimentos, amplamente utilizado em análises de sentimentos e outras tarefas de NLP. Ele mapeia as palavras para oito emoções básicas (alegria, tristeza, raiva, medo, confiança, surpresa, antecipação e desgosto) e polaridades (positivo/negativo).\n\nAssim, para cada música, temos variáveis que capturam, de maneira simplificada, a intensidade de cada uma dessas emoções. Claro que, em um mundo ideal, seria interessante aplicar essa técnica não apenas aos títulos das músicas, mas também às letras completas. Mas isso fica para um próximo episódio! Inclusive, futuramente, pretendo fazer um post com mais detalhes (e códigos) sobre um trabalho que fiz sobre Análise de Sentimentos em Letras de Músicas.\n\n\n\n### Qualidade do Sistema {.justify}\n\n\n\nÉ muito importante destacar que a qualidade das recomendações depende diretamente da qualidade das variáveis usadas. Por exemplo, não adianta querer criar um sistema de recomendação para indicar novos atacantes para o meu time do coração se eu usar variáveis como CPF, número de filhos ou DDD do celular. Nesse caso, o modelo me indicaria, quase que aleatoriamente, os jogadores mais próximos com base nessas informações irrelevantes.\n\nO mais adequado seria incluir variáveis relacionadas ao desempenho em campo, como conversão de gols, taxa de chutes por toque na bola e dribles bem-sucedidos. Até mesmo variáveis do futebol, como desarmes, podem não ser interessantes de incluir, dependendo do objetivo da recomendação. Afinal, você vai procurar um atacante que marca lateral? Rs.\n\nOutro ponto importante é que cada modelo de recomendação pode ser diferente, dependendo das variáveis usadas, da medida escolhida para calcular a semelhança, do método utilizado para indicar as experiências e da quantidade de dados disponíveis, entre outros fatores.\n\n\n\n### Nuances do Modelo Utilizado {.justify}\n\nNa base de dados, filtramos apenas as músicas que apareceram em algum dia no Top 100 das mais escutadas no Spotify após 2025. As variáveis utilizadas para calcular a semelhança entre as músicas foram destacadas em um tópico anterior. Elas capturam características das músicas, como ritmo, energia e outros detalhes, além do sentimento transmitido por meio dos títulos.\n\nComo medida de similaridade, utilizamos a Distância de Manhattan. Posteriormente, para cada música, criamos um overall (parecido com aquele que vemos no FIFA) que indica o nível de semelhança entre as músicas, variando de 0 a 100. Esse valor também pode ser interpretado como uma porcentagem de semelhança. Afinal, mostrar apenas a Distância de Manhattan entre as músicas pode ficar subjetivo na hora de interpretar os resultados.\n\n\n## Produto Final , um sistema de músicas {.justify}\n\nConforme mencionado no post principal, várias melhorias poderiam ser feitas para tornar o modelo ainda mais adequado, como ampliar o repertório de músicas, usar outras medidas de similaridade, adicionar mais variáveis importantes, entre outras. Mas, como é um produto rápido, está excelente!\n\nA seguir, será disponibilizada uma tabela com todas as músicas utilizadas, incluindo as semelhantes a elas, além do \"overall\" calculado como medida de semelhança. A tabela também traz outros detalhes, como título do álbum, data de lançamento, artistas e muito mais.\n\nVocê pode utilizar os filtros e as opções de ordenação para interagir com a tabela. Divirta-se!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DT)\n\n# Dados de exemplo\ndata <- data.frame(\n  a = c(1, 2, 3, 4, 5), \n  b = c('a', 'b', 'c', 'd', 'e'),\n  c = 1:5, d = 1:5, e = 1:5, f = 1:5, g = 1:5, h = 1:5, \n  i = 1:5, l = 1:5, m = 1:5, n = 1:5, p = 1:5, o = 1:5\n)\n\n# Configuração da tabela\ndatatable(\n  data,\n  extensions = c('Buttons', 'ColReorder'),  # Extensões para botões e reordenamento de colunas\n  options = list(\n    dom = 'Blfrtip',  # Exibe: \"B\" (buttons), \"l\" (length change), \"f\" (filter), \"t\" (table), \"i\" (info), \"p\" (pagination)\n    paging = TRUE,   # Habilita a navegação por páginas\n    pageLength = 2,  # Define o número inicial de linhas por página\n    lengthChange = TRUE,  # Permite mudar o número de linhas por página\n    scrollX = TRUE,  # Habilita a rolagem horizontal\n    scrollCollapse = TRUE,  # Colapsa a tabela ao rolar\n    columnDefs = list(\n      list(\n        targets = \"_all\", # Aplica para todas as colunas\n        searchable = TRUE  # Permite pesquisa em todas as colunas\n      )\n    ),\n    buttons = list(\n      'colvis'  # Botão para mostrar/ocultar colunas\n    ),\n    initComplete = JS(\n      \"function(settings, json) {\",\n      \"$(this.api().table().header()).css({'background-color': '#2f2f2f', 'color': '#fff'});\",\n      \"$(this.api().table().body()).css({'background-color': '#2f2f2f', 'color': '#fff'});\",\n      \"$(this.api().table().footer()).css({'background-color': '#2f2f2f', 'color': '#fff'});\",  # Footer da tabela\n      \"$(this.api().table().container()).css({'background-color': '#2f2f2f', 'color': '#fff'});\",  # Container da tabela\n      \"$('.dataTables_length select').css({'background-color': '#2f2f2f', 'color': '#fff'});\",  # Fundo do seletor de linhas por página\n      \"$('.dataTables_info').css({'background-color': '#2f2f2f', 'color': '#fff'});\",  # Informações de paginação\n      \"$('.dataTables_paginate').css({'background-color': '#2f2f2f', 'color': '#fff'});\",  # Paginação\n      \"$('.dataTables_processing').css({'background-color': '#2f2f2f', 'color': '#fff'});\",  # Processando\n      \"$('.dataTables_filter input').css({'background-color': '#2f2f2f', 'color': '#fff', 'border': '1px solid #fff'});\",  # Campo de pesquisa\n      \"}\"\n    )\n  ),\n  callback = JS(\n    \"table.on('init.dt', function() {\",\n    \"$('.dataTables_filter input').attr('placeholder', 'Pesquisar...');\",  # Placeholder para o campo de pesquisa\n    \"$('.dataTables_filter input').css({'background-image': 'url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/svgs/solid/search.svg)', 'background-position': '10px center', 'background-repeat': 'no-repeat', 'padding-left': '30px'});\",\n    \"});\"\n  )\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-03498513632137310729\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-03498513632137310729\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\",\"ColReorder\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[1,2,3,4,5],[\"a\",\"b\",\"c\",\"d\",\"e\"],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>a<\\/th>\\n      <th>b<\\/th>\\n      <th>c<\\/th>\\n      <th>d<\\/th>\\n      <th>e<\\/th>\\n      <th>f<\\/th>\\n      <th>g<\\/th>\\n      <th>h<\\/th>\\n      <th>i<\\/th>\\n      <th>l<\\/th>\\n      <th>m<\\/th>\\n      <th>n<\\/th>\\n      <th>p<\\/th>\\n      <th>o<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Blfrtip\",\"paging\":true,\"pageLength\":2,\"lengthChange\":true,\"scrollX\":true,\"scrollCollapse\":true,\"columnDefs\":[{\"targets\":\"_all\",\"searchable\":true},{\"className\":\"dt-right\",\"targets\":[1,3,4,5,6,7,8,9,10,11,12,13,14]},{\"orderable\":false,\"targets\":0}],\"buttons\":[\"colvis\"],\"initComplete\":\"function(settings, json) {\\n$(this.api().table().header()).css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$(this.api().table().body()).css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$(this.api().table().footer()).css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$(this.api().table().container()).css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$('.dataTables_length select').css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$('.dataTables_info').css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$('.dataTables_paginate').css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$('.dataTables_processing').css({'background-color': '#2f2f2f', 'color': '#fff'});\\n$('.dataTables_filter input').css({'background-color': '#2f2f2f', 'color': '#fff', 'border': '1px solid #fff'});\\n}\",\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[2,10,25,50,100]},\"callback\":\"function(table) {\\ntable.on('init.dt', function() {\\n$('.dataTables_filter input').attr('placeholder', 'Pesquisar...');\\n$('.dataTables_filter input').css({'background-image': 'url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/svgs/solid/search.svg)', 'background-position': '10px center', 'background-repeat': 'no-repeat', 'padding-left': '30px'});\\n});\\n}\"},\"evals\":[\"options.initComplete\",\"callback\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [
      "recomende_musicas_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.28/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../../site_libs/dt-ext-buttons-1.13.4/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-ext-buttons-1.13.4/js/dataTables.buttons.min.js\"></script>\r\n<script src=\"../../site_libs/dt-ext-buttons-1.13.4/js/buttons.html5.min.js\"></script>\r\n<script src=\"../../site_libs/dt-ext-buttons-1.13.4/js/buttons.colVis.min.js\"></script>\r\n<script src=\"../../site_libs/dt-ext-buttons-1.13.4/js/buttons.print.min.js\"></script>\r\n<link href=\"../../site_libs/dt-ext-colreorder-1.13.4/css/colReorder.dataTables.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-ext-colreorder-1.13.4/js/dataTables.colReorder.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}