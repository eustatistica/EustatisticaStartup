{
  "hash": "c7ed1598dd9282aaf6104a6f356afa7d",
  "result": {
    "markdown": "---\ntitle: 'Jogadores Parecidos no FF'\nauthor: \"Pedro Garcia\"\ndate: 2025-02-02\ndate-format: DD/MM/YYYY\nimage: logo2.png\ncategories: [Recomendação,Sistemas de Recomendação,Experiências,Jogadores,Free Fire,eSports,Scout]\ndescription: \"\"\nlanguage: _custom.yml\npage-break-after: always\nformat:\n  html:\n   theme: darkly\n   toc: true\n   toc-location: right\n   toc-depth: 3\n   code-fold: true\n   code-summary: \"Mostre o Código\"\n   css: styles.css\n\n---\n\n\n<!--\n-->\n\n- Ocultar as Saídas de Warnings e Messages dos Códigos\n\n# O Poder da Estatística recomendando boas Experiências Musicais {.justify}\n\n## Um Resumo da Ópera {.justify}\n\n<!--\n\nRecentemente fizemos um post bem explicativo sobre o poder que a estatística tem de nos recomendar boas experiências. A premissa é de que , e se você pudesse ter a ajuda de centenas de amigos, que sejam semelhantes a você no gosto musical e assim ganhasse a indicação deles das músicas mais próvaveis que vocês escutou e eles não.\n\nImagine poder ter mais daquela sensação, de quando escuta uma música tão boa, que quer repetir várias e várias vezes. Além do mais, ter a sensação de escutar uma excelente música pela primeira vez. Caso queira entrar a fundo nesse tema, recomendo fortemente que veja esse [post](blog/2025-01-27/recomende.qmd), lá tem alguns exemplos de como pode-se criar com estatística um modelo de recomendação, além de ter exemplos de aplicações práticas em diversas áreas, inclusive no seu empreendimento!\n\nNesse post, nos concentraremos em mostrar um produto final, que consiste em um sistema de recomendação que foi criado a partir das músicas mais escutadas no spotify. Falaremos sobre como conseguimos a base de dados, sobre a metodologia criada para criar o modelo d comendação,bem como a criação de  características para assemelhar as músicas e posteriormente mostrar as mais semelhantes entre si.\n\nCaso esteja muito ansioso para ver o produto final, permitimos que você fure a fila e já passe ao final do post para ver o último tópico e procurar novas músicas com base nas suas preferidas. Mas vale a pena já ver um pouquindo do post tá.\n\n-->\n\nRecentemente, fizemos um post bem explicativo sobre o poder da estatística de nos recomendar boas experiências. A premissa é a seguinte: e se você pudesse contar com a ajuda de centenas de amigos que têm gostos musicais semelhantes aos seus e, assim, receber deles indicações das músicas que provavelmente você gostaria de ouvir?\n\nImagine poder reviver aquela sensação incrível de escutar uma música tão boa que você quer repetir várias vezes. Além disso, imagine a emoção de descobrir uma excelente música pela primeira vez! Se quiser se aprofundar nesse tema, recomendo fortemente que veja este [post](blog/2025-01-27/recomende.qmd). Lá, você encontrará exemplos de como criar um modelo de recomendação usando estatística, além de aplicações práticas em diversas áreas, inclusive no seu negócio!\n\nNeste post, vamos nos concentrar em mostrar um produto final: um sistema de recomendação criado a partir das músicas mais escutadas no Spotify. Falaremos sobre como obtivemos a base de dados, a metodologia usada para criar o modelo de recomendação, bem como a criação de características para comparar as músicas e, finalmente, mostrar as mais semelhantes entre si.\n\nSe você estiver muito ansioso para ver o produto final, permitimos que você \"fure a fila\" e vá direto para o final do post, onde poderá buscar novas músicas com base nas suas preferidas. Mas, acredite, vale a pena dar uma olhada no conteúdo antes, tá?\n\n\n\n![](IMG1.jpeg){fig-align=\"center\" width=\"400\"}\n## Como Criar Um Sistema de Recomendação? {.justify}\n\n\n\n## Produto Final , um sistema de músicas {.justify}\n\nConforme mencionamos no post principal, muitas melhorias poderiam ser feitas para tornar o modelo ainda mais adequado, seja aumentando o repertório de músicas, usar outras medidas de similaridade, adicionando mais variáveis importantes e etc. Mas como um produto rápido, está excelente!\n\nA seguir, será disponibilizada uma tabela com todas as músicas utilizadas, incluindo as semelhantes a elas e o overall calculado como medida de semelhança. Além disso, a tabela traz outros detalhes, como título do álbum, data de lançamento, artistas e muito mais.\n\nVocê pode utilizar os filtros e as opções de ordenação para interagir com a tabela. Divirta-se!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(DT)\ndatatable(data.frame(a = c(1, 2), b = c('a', 'b')), \n          options = list(\n            dom = 't', \n            initComplete = JS(\n              \"function(settings, json) {\",\n              \"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});\",\n              \"$(this.api().table().body()).css({'background-color': '#000', 'color': '#fff'});\",\n              \"}\"))\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-6a78a3ecdcb4fa66ed6c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6a78a3ecdcb4fa66ed6c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\"],[1,2],[\"a\",\"b\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>a<\\/th>\\n      <th>b<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"initComplete\":\"function(settings, json) {\\n$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});\\n$(this.api().table().body()).css({'background-color': '#000', 'color': '#fff'});\\n}\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.initComplete\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.28/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}