{"title":"Mapas no R - Uma Expansão de um Marco Olímpico","markdown":{"yaml":{"title":"Mapas no R - Uma Expansão de um Marco Olímpico","author":"Pedro Garcia","date":"2024-09-02","date-format":"DD/MM/YYYY","image":"logo2.png","categories":["esportes","olimpíadas","gráficos","análise de dados","países","ggplot","mapas"],"description":"","language":"_custom.yml","page-break-after":"always","format":{"html":{"theme":"darkly","toc":true,"toc-location":"right","toc-depth":3,"code-fold":true,"code-summary":"Mostre o Código","css":"styles.css"}}},"headingText":"Introdução","headingAttr":{"id":"","classes":["justify"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n\n\n::: columns\n::: {.column width=\"40%\"}\n\nAnteriormente, trouxemos em um post uma [Análise das Olimpíadas](https://eustatistica.github.io/EustatisticaStartup/blog/2024-07-31/olimpiadas%20Copia.html) neste século e apresentamos dois gráficos interessantes sobre os países e sua representatividade feminina.\n\nRepresentatividade essa que alcançou o marco histórico de 50% de mulheres nos jogos olímpicos de 2024. Conforme podemos ver no visual temporal ao lado.\n\nUm dos gráficos usados no post mencionado, foi o de barras, que embora útil, possui limitações quando se trata de muitas categorias, o que pode dificultar a visualização clara dos dados. Para superar essa limitação, exploraremos outras formas de representação visual mais adequadas.\n\nQuando lidamos com variáveis envolvendo localizações, especialmente regiões, podemos utilizar mapas como um recurso visual poderoso. Os mapas nos permitem visualizar padrões geográficos e destacar áreas de interesse de maneira intuitiva e impactante.\n\n:::\n\n\n::: {.column width=\"7%\"}\n\n:::\n\n::: {.column width=\"53%\"}\n\n \n \n![](grafico_linhas2.mp4){fig-align=\"center\" width=\"400\"}\n \n \n \n:::\n:::\n\n\n\n## Abrindo Nossa Caixa de Ferramentas {.justify}\n\n```{r}\n#| fig-align: center\n#| echo: true\n#| warning: false\n#| message: false\n\nlibrary(dplyr) \nlibrary(ggplot2)\nlibrary(leaflet)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(sf)\n\n```\n\nAssim como um mecânico possui sua caixa de ferramentas para realizar seu trabalho, nós também temos a nossa no R. A seguir, vamos carregar alguns pacotes que utilizaremos ao longo da análise. Assim como uma chave de fenda tem uma função específica, cada pacote no R também tem seu propósito. Por exemplo, o ggplot2 é nossa ferramenta principal para a criação de gráficos. Recomendo fortemente que você explore cada uma dessas funcionalidades, caso tenha interesse em aprofundar seus conhecimentos.\n\n## O Tal do Gráfico de Barras {.justify}\n\nComo mencionamos anteriormente, este é o gráfico de barras que utilizamos no primeiro post sobre as Olimpíadas. O objetivo é identificar os países com maior representatividade feminina nas Olimpíadas deste século.\n\nNo entanto, se quiséssemos visualizar todos os países em um único gráfico, o número de barras seria tão grande que até um atleta de levantamento de peso teria dificuldade em lidar com elas, rs.\n\nAgora, vamos recorrer ao poder do mapa-múndi e às nossas aulas de geografia do ensino fundamental e médio!\n\nSinta-se à vontade para visualizar o gráfico e o código explicado. Isso será útil tanto para quem deseja aprofundar seus conhecimentos em R quanto para iniciantes.\n\n\n```{r}\n#| fig-align: center\n#| echo: true\n#| warning: false\n#| message: false\n\n# Carrega os dados do arquivo CSV\ndados <- read.csv(file = 'DDS_OLI_PAI_GRF_BAR.csv', \n                  header = TRUE,               # Indica que o arquivo CSV possui cabeçalhos\n                  na.strings = c('na', 'null'), # Define valores que serão interpretados como NA\n                  sep = ';',                   # Define o separador de colunas como ';'\n                  encoding = 'latin1',         # Define o encoding como Latin-1 para caracteres especiais\n                  dec = ',')                   # Define o separador decimal como ','\n\n# Cria um gráfico de barras usando o ggplot2\np <- ggplot(dados, aes(x = reorder(paste0(reg, ' | ', NOC), ger_prop_f), \n                       y = ger_prop_f)) +\n  \n  # Adiciona as barras ao gráfico com preenchimento colorido de acordo com um gradiente\n  geom_bar(stat = \"identity\", \n           fill = scales::gradient_n_pal(c(\"deeppink\", \"pink\", \"lightpink\"))(seq(0, 1, length.out = nrow(dados)))) +\n  \n  # Adiciona rótulos de texto sobre as barras, mostrando a porcentagem\n  geom_text(aes(label = paste0(round(ger_prop_f * 100, 1), '%')), \n            vjust = 0.5, hjust = 1.25, size = 5, fontface = \"bold\", color = 'black') +\n  \n  # Inverte os eixos X e Y para uma melhor visualização horizontal\n  coord_flip() +\n  \n  # Aplica um tema minimalista ao gráfico\n  theme_minimal() +\n  \n  # Personaliza as propriedades visuais do gráfico\n  theme(\n    axis.title.x = element_blank(),             # Remove o título do eixo X\n    axis.title.y = element_blank(),             # Remove o título do eixo Y\n    axis.text.x = element_blank(),              # Remove o texto dos rótulos do eixo X\n    axis.ticks.x = element_blank(),             # Remove as marcas de tique no eixo X\n    axis.text.y = element_text(size = 14, face = \"bold\", color = 'white'),  # Altera o tamanho, estilo e cor do texto do eixo Y\n    panel.grid = element_blank(),               # Remove as linhas de grade do painel\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),  # Ajusta as propriedades do título do gráfico (tamanho 0 significa sem título)\n    plot.background = element_rect(fill = scales::alpha(\"black\", 1), color = NA),  # Define o fundo do gráfico como preto\n    panel.background = element_rect(fill = scales::alpha(\"black\", 1), color = NA)  # Define o fundo do painel como preto\n  )\n  \n  p\n\n```\n\n\n\n## E agora, é o Mapa, já diria a Dora! {.justify}\n\n```{r}\n{\n#| fig-align: center\n#| echo: true\n#| warning: false\n#| message: false\n  \n# Carrega os dados de um arquivo CSV chamado 'DDS_OLI_PAI_GRF_MAP.csv'\n# Define que a primeira linha do arquivo contém os nomes das colunas\n# Valores como 'na' e 'null' serão tratados como valores ausentes (NA)\n# O separador de colunas no arquivo é ';', a codificação dos caracteres é 'latin1'\n# e os valores numéricos utilizam ',' como separador decimal\nvisual = read.csv(file = 'DDS_OLI_PAI_GRF_MAP.csv', header = TRUE, na.strings = c('na', 'null'), sep = ';', encoding = 'latin1', dec = ',')\n\n# Carrega um mapa do mundo com uma resolução média e o retorna como um objeto de classe 'sf' (geometria espacial)\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Faz a junção dos dados carregados do CSV com o mapa do mundo\n# A junção é feita utilizando a coluna 'admin' do mapa e a coluna 'reg' dos dados\n# O parâmetro 'all = TRUE' mantém todas as regiões do mapa, mesmo se não houver correspondência nos dados\ndados <- merge(world, visual, all = TRUE, by.x = \"admin\", by.y = \"reg\")\n\n# Remove as linhas do conjunto de dados que possuem valores ausentes (NA) na coluna 'ger_prop_f'\ndados <- dados[!is.na(dados$ger_prop_f), ]\n\n# Verifica o tipo de geometria das regiões no conjunto de dados\nst_geometry_type(dados)\n\n# Filtra os dados para manter apenas regiões com geometria do tipo 'POLYGON' ou 'MULTIPOLYGON'\ndados <- dados[st_geometry_type(dados) %in% c(\"POLYGON\", \"MULTIPOLYGON\"), ]\n\n# Converte qualquer geometria complexa em polígonos simples, se necessário\ndados <- st_cast(dados, \"POLYGON\")\n\n# Define uma paleta de cores para o mapa, com diferentes tons\npaleta = c('white', \"gray75\", \"pink\", \"deeppink\")\n\n# Cria um mapa interativo usando o pacote leaflet, com os dados processados\nmapa = leaflet(dados) %>%\n  addProviderTiles(providers$CartoDB.DarkMatter) %>%  # Adiciona um tema de fundo escuro ao mapa\n  addPolygons(\n    fillColor = ~colorNumeric(palette = paleta, domain = dados$ger_prop_f)(ger_prop_f),  # Preenche as regiões com cores baseadas nos valores de 'ger_prop_f'\n    fillOpacity = 0.7,  # Define a transparência do preenchimento das regiões\n    color = \"white\",    # Define a cor das bordas das regiões\n    weight = 1,         # Define a espessura das bordas\n    opacity = 1,        # Define a opacidade das bordas\n    highlight = highlightOptions(\n      weight = 3,        # Aumenta a espessura das bordas ao passar o mouse\n      color = \"black\",   # Muda a cor das bordas para preto ao passar o mouse\n      fillOpacity = 0.7, # Mantém a transparência ao passar o mouse\n      bringToFront = TRUE # Traz a região para frente ao passar o mouse\n    ),\n    label = ~paste0(admin, \": \", round(ger_prop_f * 100, 2), \"%\"),  # Cria rótulos com o nome da região e o valor de 'ger_prop_f' arredondado\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"bold\", \"color\" = \"black\"),  # Define o texto dos rótulos como negrito e de cor preta\n      textsize = \"15px\",   # Define o tamanho do texto dos rótulos\n      direction = \"auto\",  # Direção automática para posicionar os rótulos\n      opacity = 0.9,       # Define a opacidade dos rótulos\n      offset = c(0, 0)     # Define o deslocamento dos rótulos\n    )\n  ) %>%\n  addLegend(\n    pal = colorNumeric(palette = paleta, domain = dados$ger_prop_f),  # Adiciona uma legenda ao mapa usando a mesma paleta de cores\n    values = ~ger_prop_f,  # Define os valores que serão exibidos na legenda\n    opacity = 0.7,         # Define a transparência da legenda\n    title = \"Proporção Feminina\",  # Define o título da legenda\n    position = \"bottomright\",  # Posiciona a legenda no canto inferior direito\n    labFormat = labelFormat(suffix = \"%\")  # Formata os rótulos da legenda com o sufixo '%'\n  ) %>%\n  addMiniMap(tiles = providers$CartoDB.Positron, toggleDisplay = TRUE) %>%  # Adiciona um mini mapa no canto inferior direito\n  addLayersControl(\n    baseGroups = c(\"Dark Matter\"),  # Adiciona a opção de controle de camadas\n    options = layersControlOptions(collapsed = FALSE)  # Configura o controle de camadas para que ele não seja colapsável\n  ) %>%\n  setView(lng = 0, lat = 20, zoom = 2)  # Centraliza o mapa na longitude 0 e latitude 20, com zoom inicial de 2\n\n\nmapa  \n}\n\n```\n\n\n\n\nComo podemos observar, o mapa possui um grande poder visual!\n\nAnalisando o mapa, vemos que os países em preto são aqueles que não atenderam ao critério de ter, no mínimo, 20 atletas femininas neste século. Observamos que o continente africano é o mais ausente nesse aspecto. Por outro lado, em cerca de metade dos países africanos que aparecem no mapa, há uma boa representatividade feminina, com destaque para Angola, Zimbábue e Etiópia.\n\nNa Europa, algo que me surpreende (talvez devido a um viés pessoal) é que a grande maioria dos países apresenta uma representatividade feminina inferior a 45%, considerando que a faixa de igualdade estaria entre 45% e 55%.\n\nMais à direita, em direção à Ásia, é fácil perceber um país que chama muita atenção: a China, que tem uma boa representatividade feminina, com sua cor se destacando na vasta área demográfica que ocupa.\n\nPorém, ali perto, de forma mais discreta, temos um destaque ainda maior: a Coreia do Norte, com cerca de 72% de representatividade feminina. De maneira geral, os países asiáticos próximos a essa região permanecem dentro da faixa de igualdade que estabeleci.\n\nDo outro lado do mapa, podemos retornar ao nosso Brasil, que possui 48% de mulheres, quase atingindo os 50% \"ideais\".\n\nRessalto que a proporção de representação não foi normalizada pelas respectivas proporções de mulheres em cada país. Isso seria uma medida mais justa para comparar e interpretar o visual.\n\n# Referências {.justify}\n\n- [Base de Dados | Olympic Data](https://www.kaggle.com/datasets/bhanupratapbiswas/olympic-data)\n\n\n\n\n\n\n\n\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css","styles.css"],"toc":true,"toc-depth":3,"output-file":"mapascomrolimpiadas.html"},"language":{"listing-page-field-author":"autor","title-block-author-single":"autor","toc-title":"nesta página","code-summary":"Mostre o Código"},"metadata":{"lang":"pt-br","fig-responsive":true,"quarto-version":"1.2.335","theme":"darkly","toc-title":"nesta página","title-block-banner":true,"title":"Mapas no R - Uma Expansão de um Marco Olímpico","author":"Pedro Garcia","date":"2024-09-02","date-format":"DD/MM/YYYY","image":"logo2.png","categories":["esportes","olimpíadas","gráficos","análise de dados","países","ggplot","mapas"],"description":"","page-break-after":"always","toc-location":"right"},"extensions":{"book":{"multiFile":true}}}}}