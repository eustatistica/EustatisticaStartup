{"title":"Como os dados podem nos dar novas Experiências!","markdown":{"yaml":{"title":"Como os dados podem nos dar novas Experiências!","author":"Pedro Garcia","date":"2025-02-13","date-format":"DD/MM/YYYY","image":"logo.jpeg","categories":["Recomendação","Sistemas de Recomendação","Experiências"],"description":"","language":"_custom.yml","page-break-after":"always","format":{"html":{"theme":"darkly","toc":true,"toc-location":"right","toc-depth":3,"code-fold":true,"code-summary":"Mostre o Código","css":"styles.css"}}},"headingText":"| echo: false","containsRefs":false,"markdown":"\n\n<!--\n-->\n\n\n```{r}\n#| warning: false\n#| message: false\n\nlibrary(DT)\n\ncriar_tabela <- function(dados) {\n  datatable(\n    dados,\n    extensions = 'ColReorder',  \n    options = list(\n      dom = 'lfrtip',  \n      paging = TRUE,   \n      pageLength = 5,  \n      lengthChange = TRUE,  \n      scrollX = TRUE,  \n      scrollCollapse = TRUE,  \n      columnDefs = list(\n        list(\n          targets = \"_all\", \n          searchable = TRUE  \n        )\n      ),\n      language = list(\n        search = \"Pesquisar:\",\n        lengthMenu = \"Mostrar _MENU_ entradas\",\n        info = \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\n        infoEmpty = \"Mostrando 0 a 0 de 0 entradas\",\n        infoFiltered = \"(filtrado de _MAX_ entradas totais)\",\n        paginate = list(\n          first = \"Primeiro\",\n          previous = \"Anterior\",\n          `next` = \"Próximo\",\n          last = \"Último\"\n        ),\n        emptyTable = \"Nenhum dado disponível na tabela\",\n        zeroRecords = \"Nenhum registro correspondente encontrado\"\n      ),\n      initComplete = JS(\n        \"function(settings, json) {\",\n        \"$(this.api().table().header()).css({'background-color': '#15202B', 'color': '#FFFFFF'});\",\n        \"$(this.api().table().body()).css({'background-color': '#15202B', 'color': '#FFFFFF'});\",\n        \"$(this.api().table().footer()).css({'background-color': '#15202B', 'color': '#FFFFFF'});\",  \n        \"$(this.api().table().container()).css({'background-color': '#15202B', 'color': '#FFFFFF', 'border': '2px solid #1DA1F2'});\",  # Adiciona borda azul ao redor da tabela\n        \"$('.dataTables_length select').css({'background-color': '#15202B', 'color': '#FFFFFF'});\",  \n        \"$('.dataTables_info').css({'background-color': '#15202B', 'color': '#FFFFFF'});\",  \n        \"$('.dataTables_paginate').css({'background-color': '#15202B', 'color': '#FFFFFF'});\",  \n        \"$('.dataTables_processing').css({'background-color': '#15202B', 'color': '#FFFFFF'});\",  \n        \"$('.dataTables_filter input').css({'background-color': '#15202B', 'color': '#FFFFFF', 'border': '1px solid #1DA1F2'});\",  \n        \"}\"\n      )\n    ),\n    callback = JS(\n      \"table.on('init.dt', function() {\",\n      \"$('.dataTables_filter input').attr('placeholder', 'Pesquisar...');\", \n      \"$('.dataTables_filter input').css({'background-image': 'url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/svgs/solid/search.svg)', 'background-position': '10px center', 'background-repeat': 'no-repeat', 'padding-left': '30px'});\",\n      \"});\"\n    )\n  )\n}\n\n\n```\n\n\n# Um resumo do post! {.justify}\n\nVocê já parou para pensar como a Netflix parece saber exatamente qual série você vai querer assistir ou como a Amazon sugere produtos que você nem imaginava que precisava? Parece mágica, mas, na verdade, é tudo graças aos dados e a algumas técnicas inteligentes que ajudam a entender melhor o que você gosta.\n\nO post explica como esses dados podem criar experiências incríveis para nós. Por exemplo, você já assistiu a um filme sem grandes expectativas e acabou adorando? Ou descobriu uma música que ficou tocando o dia todo? A ideia é que, com muitas informações sobre seus gostos, é possível recomendar coisas que você provavelmente vai gostar — e que talvez nem soubesse que existiam.\n\nO texto traz exemplos práticos, como comparar os gostos de duas pessoas para ver o quão parecidas elas são e, a partir disso, sugerir filmes ou séries que uma já viu e a outra não. E isso não se aplica só à Netflix, viu? Pode ser usado em várias áreas: desde escolher um sanduíche no iFood até encontrar um jogador com características semelhantes ao que saiu do seu time favorito.\n\nNo fim, a ideia é usar os dados para surpreender você, seja com algo bem parecido com o que você já gosta, ou com uma experiência nova, mas que ainda vai agradar. E o melhor: isso não só melhora sua experiência, como também ajuda os negócios a oferecerem produtos e serviços de forma mais eficiente. É uma situação em que todos saem ganhando!\n\n# Como os dados podem nos proporcionar novas experiências? {.justify}\n\n\n## A Internet e a capacidade de ler seus pensamentos {.justify}\n\n![Imagem Criada com IA - Meta AI Llama 3.2](IMG1.jpeg){fig-align=\"center\" width=\"400\"}\n\nVocê já se perguntou como a \"internet\" sabe exatamente o que você quer — e até o que você não quer, mas passa a querer? Como a Amazon consegue adivinhar os produtos que você vai desejar consumir? Como as plataformas de streaming, como Netflix e HBO, conseguem prever os filmes mais prováveis de você assistir e criam listas personalizadas para você escolher? Isso tudo é bruxaria?! Ou é a \"mágica\" da Inteligência Artificial, que surgiu do nada, como um meteoro? Pode ser um pouco de ambos, rs. Mas, no fundo, por trás de toda essa brincadeira, quem está realmente arquitetando esse poder é a Estatística, que, embora não tenha o mesmo glamour de termos como IA, Machine Learning e Data Science, é tão importante quanto o hype que esses conceitos geram.\n\n## As experiências por trás dos dados {.justify}\n\n\nUm bom filme, uma boa série, um bom produto, um bom jogo, uma boa música, boas novidades em geral, nos geram boas sensações, ainda mais quando nos surpreendem. E aquele filme que você assistiu de forma despretensiosa, mas que acabou se envolvendo tanto, a ponto de dar vontade até de \"desver\" para reviver aquela sensação. E as músicas desconhecidas que você ouviu pela primeira vez, gostou tanto e passou a reproduzir dezenas de vezes no mesmo dia. E se você tivesse a chance de encontrar experiências tão boas quanto as que já viveu? No mundo da música, por exemplo, você já deve ter ouvido centenas de canções ao longo da vida, mas existem muitas outras que você nunca escutou e que poderiam te agradar tanto quanto sua favorita — ou até mais.\n\nDiante disso, qual seria a melhor forma de encontrar novas experiências, seja qual for o tipo, e não apenas novas, mas também boas? A maneira mais simples de fazer isso é buscar indicações. Quando queremos ver um bom filme, por exemplo, pedimos a sugestão de alguém. Mas esse alguém não pode ser qualquer pessoa; precisa ser alguém que entenda o seu gosto, geralmente as pessoas mais próximas a você, como um amigo. Outra opção é pesquisar, encontrar pessoas na internet que fazem análises de filmes que se alinham ao seu gosto.\n\nGeralmente, com essas indicações, conseguimos ter boas experiências. Mas e se pudéssemos ter uma indicação ainda mais precisa? E se você pudesse contar com milhares de amigos que compartilham os mesmos gostos que você? E esses milhares de amigos pudessem te indicar novas experiências com base nas que eles já viveram? Com a era dos dados, especialmente a digital, isso é totalmente possível. Imagine os usuários da Netflix, por exemplo. Quantos já passaram pela plataforma ao redor do mundo? Milhões? Dentro desse vasto universo, qual a chance de encontrar centenas de pessoas com os mesmos gostos que os seus, com base no histórico de consumo de ambos? E a partir desses \"SEUS NOVOS MELHORES AMIGOS\", você poderia receber indicações dos filmes que eles assistiram e você ainda não viu, mas que têm altas chances de você amar?\n\nPense nisso para compras, como na Amazon. Pense nisso para restaurantes, como no cardápio de um restaurante no iFood. Pense nisso para os esportes, como na indicação de um novo jogador com as mesmas características de um que foi embora. As possibilidades são infinitas.\n\nCom alguns cálculos simples, um toque de estatística e análise de dados, conseguimos melhorar a experiência dos seus clientes, aumentando sua satisfação e a aquisição de novas experiências — que é, no fim das contas, o que levamos da vida. Quanto à otimização do seu próprio negócio, ao indicar novos itens que seu cliente pode gostar (e que, às vezes, sequer sabia da existência ou de que poderiam ser úteis), todos saem ganhando!\n\n\n\n\n## Um exemplo, simples, rápido e pratico! {.justify}\n\nHá aquela máxima de que os opostos se atraem, mas será que isso é mesmo verdade? Mas, o que isso tem a ver com o assunto? Neste exemplo, vou tentar usar essa máxima e até quantificá-la.  Primeiramente, para que eu possa indicar algo para alguém, eu preciso ter gostos parecidos com a pessoa. Mas como podemos medir esse \"parecido\"? Existem várias formas, e uma delas, que calcula a similaridade, também pode calcular o oposto — ou seja, o que não é parecido.\n\nComo exemplo, podemos calcular o quão próximos são os gostos de duas pessoas. No nosso caso, o quão próximos são os meus gostos e os da minha cônjuge. Para isso, vamos atribuir notas a alguns filmes ou séries e, assim, posteriormente, calcularemos, por uma das maneiras possíveis, o quão próximos somos em relação aos gostos cinematográficos.\n\n\n```{r}\n#| warning: false\n#| message: false\n\nrequire(DT)\n\n#Criando base de dados da avaliação dos filmes\ndados = data.frame(cinefilos = c('Pedro','Tâmilla'),TWD = c(10,10),Naruto = c(10,6),Interestelar = c(10,5), Moneyball = c(10,3),Round6 = c(3,8))\n\ncriar_tabela(dados)\n\n\n```\n\nUma primeira forma de calcular a semelhança entre nós poderia ser usando a boa e velha distância do ensino fundamental. Usando o Naruto como base, sabemos que o grau de satisfação do Pedro com a série é 10, enquanto a Tâmilla não é muito fã das aventuras de Naruto tentando trazer o Sasuke de volta à vila e dá a série uma nota 6. Podemos imaginar que o Pedro está a 10 km da linha de saída da alta satisfação com o anime, exatamente na linha de chegada. Já a Tâmilla parou no 6 km, após a linha de largada. Assim, a distância entre os dois seria de 4 km, mas para o nosso contexto, podemos considerar isso como uma diferença de 4 notas.\n\nAgora, se incluirmos um novo filme na jogada, como Interestelar, temos que recalcular a diferença entre as notas dos dois. Agora, a diferença entre o Pedro e a Tâmilla é de 5 notas. Podemos somar as diferenças de notas entre os dois filmes, para ter uma ideia geral da semelhança entre os dois. Nesse caso, temos uma diferença de 9 notas.\n\nPorém, apenas somar as diferenças ainda não nos dá uma medida muito interpretativa. Para tornar isso mais útil, podemos calcular a média das diferenças. Como temos dois filmes avaliados por ambos, podemos dividir o total de 9 por 2, resultando em uma diferença média de 4,5 notas por filme. Para tornar isso ainda mais interpretativo, imagine que a diferença máxima entre as notas seria de 10, nesse cenário as opiniões de ambos são totalmente opostas sobre tudo o que assistiram. Se fizermos a conta de 4,5 dividido por 10, temos uma diferença relativa entre ambos. Multiplicando por 100, obtemos uma diferença percentual do gosto entre os dois, que seria de 45%. Para você, isso é muito distante? Para mim, já começa a ser bem divergente quando a diferença é maior que 40%.\n\nÉ importante ressaltar que, para calcular a diferença entre os elementos, usamos o módulo ou valor absoluto da diferença, para que valores negativos não afetem o resultado. Isso acontece porque tanto a diferença para cima quanto para baixo têm o mesmo peso na semelhança entre os cinéfilos.\n\nPodemos também ter uma noção da distância entre os dois para esses dois filmes de maneira geométrica.\n\n```{r}\n#| warning: false\n#| message: false\n\n#Código para Criar Gráfico\nlibrary(ggplot2)\n\nggplot(dados, aes(x = Naruto, y = Interestelar, label = cinefilos)) +\n  geom_point(aes(color = cinefilos), size = 4) +  \n  geom_text(vjust = -0.5, hjust = 0.5, size = 5) +  \n  geom_line(aes(group = 1), color = \"black\", linetype = \"dashed\") +  \n  scale_x_continuous(limits = c(0, 10.5), breaks = seq(0, 10, 1)) +  \n  scale_y_continuous(limits = c(0, 10.5), breaks = seq(0, 10, 1)) +  \n  labs(title = \"Comparação das Notas\",\n       x = \"Naruto\",\n       y = \"Interestelar\",\n       color = \"Cinefilos\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 0, hjust = 0.5, size = 12),  \n    axis.text.y = element_text(size = 12),                          \n    axis.title.x = element_text(size = 14),                         \n    axis.title.y = element_text(size = 14),                         \n    plot.title = element_text(size = 16),                           \n    legend.position = \"none\"                                        \n  )\n\n\n```\n\nEssa noção geométrica começa a se perder quando temos mais de dois elementos, pois temos apenas dois eixos para plotar os gráficos. Embora, com certo esforço, seja possível visualizar até em três eixos no espaço 3D, ao trabalharmos com mais de quatro eixos ou filmes, a visualização se torna bastante difícil. Agora veremos, na prática, como indicar filmes para mais de dois usuários.\n\nVamos usar algumas funções para calcular a distância entre os usuários e, assim, determinar qual está mais próximo de qual. Com isso, podemos escolher o usuário mais parecido e indicar filmes que ele tenha assistido, mas que o usuário referência ainda não viu. Antes, veremos uma representação visual com mais de dois cinéfilos em relação ao gosto por dois filmes.\n\n```{r}\n#| warning: false\n#| message: false\n\n#Criando Base de Dados Artificial para 4 Cinéfilos\n\ncinefilos = c('Pedro','Tâmilla','Alicia','João')\nn = length(cinefilos)\nset.seed(10)\ndados = data.frame(cinefilos,TWD = sample(0:10,n,T),Naruto = sample(0:10,n,T),Interestelar = sample(0:10,n,T), Moneyball = sample(0:10,n,T),Round6 = sample(0:10,n,T))\n\nggplot(dados, aes(x = Naruto, y = Moneyball, label = cinefilos)) +\n  geom_point(aes(color = cinefilos), size = 4) +  \n  geom_text(vjust = -0.5, hjust = 0.5, size = 5) +  \n  scale_x_continuous(limits = c(0, 10.5), breaks = seq(0, 10, 1)) +  \n  scale_y_continuous(limits = c(0, 10.5), breaks = seq(0, 10, 1)) +  \n  labs(title = \"Comparação das Notas\",\n       x = \"Naruto\",\n       y = \"Moneyball\",\n       color = \"Cinefilos\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 0, hjust = 0.5, size = 12),  \n    axis.text.y = element_text(size = 12),                          \n    axis.title.x = element_text(size = 14),                       \n    axis.title.y = element_text(size = 14),                         \n    plot.title = element_text(size = 16),                            \n    legend.position = \"none\"                                       \n  )\n\n```\n\n\n\n\nVisualmente, já podemos observar que, com base nesses dois filmes, os gostos da Tâmilla e da Alicia são bastante próximos. Assim, poderíamos usar o histórico de consumo uma da outra para indicar novos filmes que ambas ainda não assistiram, além dos filmes que receberam melhores avaliações de cada uma. O João também está próximo de ambas, e, caso fosse necessário, poderíamos até usar a opinião dele como complemento para a ajudar a indicar um melhor entretenimento para Tâmilla, acrescentando à opinião do João com a da Alicia.\n\nNa prática, não se utiliza apenas um usuário semelhante para indicar novas experiências, mas sim centenas ou até milhares, dependendo do tamanho do histórico de dados disponível.\n\nVale notar que, no nosso exemplo, todos assistiram e avaliaram todos os filmes da base de dados. No entanto, na prática, haverá filmes com valores faltantes ou vazios, que correspondem aos filmes que não foram assistidos. Este visual é útil para ter uma noção comparativa dos gostos em relação a apenas dois filmes. Para obter informações mais precisas, podemos calcular a distância entre todos os usuários, usando todos os filmes e séries, e, em seguida, ranquear os mais semelhantes.\n\n## Codificando {.justify}\n\nAqui, aproveitamos a base de dados criada anteriormente e fazemos algumas alterações para exibir e, posteriormente, calcular as distâncias.\n\n```{r}\n#| warning: false\n#| message: false\n\nrequire(tidyr)\nrequire(dplyr)\nlibrary(tibble)\n\nrow.names(dados) = dados$cinefilos\ndados = dados |> select(-cinefilos)\n\ncriar_tabela(dados)\n\n```\n\nEm seguida vamos usar a distância de [manhattan](https://www.datacamp.com/pt/tutorial/manhattan-distance) para calcular a semelhança entre os usuários.\n\n```{r}\nDIST = as.data.frame(as.matrix(dist(dados[,],method = 'manhattan',upper = T,diag = T)))\n\nDIST <- DIST %>%\n  rownames_to_column(var = \"cinefilo\")\n\nDIST <- DIST %>%\n  pivot_longer(cols = -cinefilo, names_to = \"semelhantes\", values_to = \"valor\")\n\nDIST = DIST |> as.data.frame()\nDIST$distancia = 'manhattan'\n\nDIST = DIST[DIST$cinefilo != DIST$semelhantes,]\n\n\ncriar_tabela(DIST[,] |> arrange(valor) |> as.data.frame())\n\n\n```\n\nAcima, temos a distância calculada entre os cinéfilos, de modo que os dados estão ordenados pelos mais semelhantes, mostrando o valor da distância total entre eles, calculado pela distância de Manhattan. Essa distância é nada mais que a diferença absoluta entre as notas dos usuários, para evitar distâncias negativas. A partir desse conjunto, somam-se todas as diferenças. Assim, os cinéfilos mais semelhantes entre si são a Tâmilla e o João, com uma distância de 7.\n\nNo entanto, essa ainda não é uma medida tão interpretativa. Portanto, faremos uma alteração nessa métrica, calculando a média da distância pelo total de filmes. Dessa forma, teremos uma estimativa da diferença de gosto entre os usuários por filme.\n\n\n\n\n```{r}\n#| warning: false\n#| message: false\n\nDIST$valor = DIST$valor/ncol(dados)\n\n\ncriar_tabela(DIST[,] |> arrange(valor) |> as.data.frame())\n\n```\n\n\n\nLogo, para esses cinéfilos, a distância média das opiniões deles é de 1,4 de nota. Assim, por exemplo, em um cenário hipotético, em que João daria uma nota de 8,4 para um filme da Marvel, a Tâmilla, em média, daria uma nota de 9,8 ou 7.\n\nComo eles são próximos, poderíamos usar o histórico de um para recomendar os filmes mais bem avaliados que o outro ainda não viu.\n\nNesse exemplo, mostramos uma forma de relacionar os gostos dos usuários com base no seu histórico de consumo, conectando usuários por suas experiências compartilhadas. Além disso, exploramos apenas uma maneira de calcular a semelhança entre eles. A seguir, usaremos outra forma de relacionar os usuários, mas de maneira indireta, relacionando as experiências em si pelas suas características.\n\nImagine que somos proprietários de um lanchinho que vende sanduíches no iFood e usamos o app AnotaAí. Temos o histórico de pedidos de diversos tipos de sanduíches ao longo do tempo, onde temos acesso às características desses sanduíches, como: carnes, saladas, molhos, bebidas, etc. Veja o exemplo de dados:\n\n\n```{r}\n#| warning: false\n#| message: false\n\nset.seed(10)\ndados = data.frame(sanduiche = paste0('SANDUÍCHE Nº',sample(1:10,5,T)),\n           hamburguer_bovino = sample(0:2,5,T),\n           hamburguer_frango = sample(0:2,5,T),\n           alface = sample(0:2,5,T),\n           tomate = sample(0:2,5,T),\n           picles = sample(0:2,5,T),\n           fritas = sample(0:2,5,T),\n           barbecue = sample(0:2,5,T),\n           maionese = sample(0:2,5,T),\n           cheddar = sample(0:2,5,T),\n           pimenta = sample(0:2,5,T))\n\ncriar_tabela(dados)\n\n```\n\n\nAgora, em vez de relacionar as experiências dos clientes, relacionamos as características das experiências. A partir das escolhas de um tipo de sanduíche, podemos selecionar quais outros ofereceriam uma experiência diferente, com ingredientes variados. É possível, até mesmo, escolher o quão diferente (em intensidade) essa experiência poderia ser.\n\nA seguir, replicaremos o cálculo das distâncias utilizando o código usado com os cinéfilos.\n\n```{r}\n#| warning: false\n#| message: false\n\nrequire(tibble)\nrow.names(dados) = dados$sanduiche\ndados = dados |> select(-sanduiche)\n\nDIST = as.data.frame(as.matrix(dist(dados[,],method = 'manhattan',upper = T,diag = T)))\n\nDIST <- DIST %>%\n  rownames_to_column(var = \"sanduiche\")\n\nDIST <- DIST %>%\n  pivot_longer(cols = -sanduiche, names_to = \"semelhantes\", values_to = \"valor\")\n\nDIST = DIST |> as.data.frame()\nDIST$distancia = 'manhattan'\n\nDIST = DIST[DIST$sanduiche != DIST$semelhantes,]\n\ncriar_tabela(DIST[,] |> arrange(valor) |> as.data.frame())\n\n```\n\n\n\n\n\nSendo assim, podemos concluir que os sanduíches mais semelhantes são o 7 e o 6. Portanto, se um cliente quiser comprar um ou outro, poderíamos sugerir o outro como uma nova experiência, que não seria tão diferente da anterior. Caso o cliente tenha interesse em \"navegar por molhos mais distantes\" rs, poderíamos indicar o próximo sanduíche mais parecido com o 7, e assim por diante. Isso seria feito sem utilizar o histórico de consumo dos clientes, mas sim com base nas características de cada experiência.\n\n## Como essa técnica pode ajudar o seu negócio ou projeto? {.justify}\n\n![Imagem Criada com IA - Meta AI Llama 3.2](IMG2.jpeg){fig-align=\"center\" width=\"400\"}\n\n\nAumentar a experiência do cliente, promovendo satisfação e fidelização, é fundamental. Por meio de um sistema de recomendação, seria possível indicar experiências mais prováveis de consumo, com base em um histórico passado, e isso pode ser aplicado em qualquer área. Além disso, a otimização das vendas pode ocorrer ao indicar produtos que, muitas vezes, não tinham tanta saída. Esses produtos poderiam ser promovidos por meio de promoções, relacionadas aos que mais vendem, criando até mesmo uma cesta de experiências personalizada para venda.\n\nFalando sobre personalização, o consumo atual, que adota princípios de hiperpersonalização, é eficiente, pois atende à necessidade específica do cliente. Além disso, seria possível personalizar até uma escala de quão parecida seria a experiência do cliente. Em vez de indicar uma experiência extremamente parecida, poderia-se escolher um produto \"60%\" semelhante, proporcionando uma experiência diferente, mas que ainda oferece uma diferenciação, trazendo o elemento de novidade/surpresa. Isso pode ser interessante, principalmente no contexto dopaminérgico, que estimula o prazer e a recompensa.\n\nAs aplicações são muitas e diversas. A seguir, darei alguns exemplos práticos com os quais já trabalhei, e também de outras possibilidades.\n\n## Aplicações {.justify}\n\n![Imagem Criada com IA - Meta AI Llama 3.2](IMG3.jpeg){fig-align=\"center\" width=\"400\"}\n\n\nComo destaquei bastante no post, a recomendação de entretenimento, como filmes, músicas, jogos, etc., é fundamental para a retenção do público, elevando a experiência e até sugerindo indicações \"meio termo\", ou seja, algo parecido, mas nem tanto, promovendo uma experiência mais \"nova\" ou alternativa. Há algum tempo ajudei a ministrar um minicurso na UFU que ajudava a criar do zero um sistema de recomendação de filmes.\n\nAplicação no esporte: a recomendação pode ser usada na contratação de jogadores semelhantes, que podem até ter um custo-benefício maior. Em um dos times que passei no eSports, usei essa técnica para encontrar uma jogadora mais semalhante a uma que saiu da equipe.\n\nAlém disso, é possível assemelhar os padrões de times semelhantes, com a finalidade de entender componentes estratégicos e táticos. Na minha [TCC](https://repositorio.ufu.br/handle/123456789/44312) usei uma técnica de Clusterização para agrupar estilos de jogos semelhantes de times do League of Legends para entender padrões dos dados.\n\nImagine que você tenha um restaurante, lanchonete ou até um sacolão, e tenha informações sobre os ingredientes e itens escolhidos por cada cliente. Com base nesse histórico, é possível aprimorar a experiência do cliente, recomendando novas experiências, aumentando a eficiência do estoque e dando mais saída a itens que até então eram despercebidos. \n\nPlataformas de viagem podem sugerir destinos, atividades e pacotes personalizados com base no histórico de viagens e nas preferências do usuário. Por exemplo, se um cliente viajou recentemente para praias tropicais e avaliou positivamente, o sistema pode recomendar outros destinos de praia ou até experiências semelhantes, como passeios de barco, mergulho ou gastronomia local.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css","styles.css"],"toc":true,"toc-depth":3,"output-file":"recomende.html"},"language":{"listing-page-field-author":"autor","title-block-author-single":"autor","toc-title":"nesta página","code-summary":"Mostre o Código"},"metadata":{"lang":"pt-br","fig-responsive":true,"quarto-version":"1.2.335","theme":"darkly","toc-title":"nesta página","title-block-banner":true,"title":"Como os dados podem nos dar novas Experiências!","author":"Pedro Garcia","date":"2025-02-13","date-format":"DD/MM/YYYY","image":"logo.jpeg","categories":["Recomendação","Sistemas de Recomendação","Experiências"],"description":"","page-break-after":"always","toc-location":"right"},"extensions":{"book":{"multiFile":true}}}}}